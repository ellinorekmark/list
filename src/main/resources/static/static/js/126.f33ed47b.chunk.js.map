{"version":3,"file":"static/js/126.f33ed47b.chunk.js","mappings":"4ZAUA,MAAMA,EAAY,IAAIC,EAAAA,EAEtB,SAASC,IACL,OAAO,IACX,CAEA,MA+KA,EA/KoBC,IAAyB,IAAxB,KAACC,EAAI,WAAEC,GAAWF,EACnC,MAAM,aAACG,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3BC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,WACxCG,EAAkBC,IAAkBJ,EAAAA,EAAAA,WAAS,IAC7CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,IAE3CO,EAAUd,EAAKc,SAAW,GAC1BC,EAAUf,EAAKe,SAAW,GAE1BC,EAAmBA,CAACC,EAAMC,KAC5B,MAAMC,EAAU,IACTnB,EACHc,QAAqB,WAAZI,EACH,IAAIJ,EAASG,GAAMG,QAAOC,IAAMN,EAAQO,SAASD,KACjDP,EAAQM,QAAQG,GAAWA,IAAWN,IAC5CF,QAAqB,WAAZG,EACH,IAAIH,EAASE,GAAMG,QAAOC,IAAMP,EAAQQ,SAASD,KACjDN,EAAQK,QAAQI,GAAWA,IAAWP,KAEhDQ,QAAQC,IAAI,kCAAmCC,KAAKC,UAAUT,IAC9DlB,EAAWkB,EAAQ,EAGjBU,EAAoBZ,IACtB,MAAME,EAAU,IACTnB,EACHc,QAASA,EAAQM,QAAQG,GAAWA,IAAWN,IAC/CF,QAASA,EAAQK,QAAQI,GAAWA,IAAWP,KAEnDhB,EAAWkB,EAAQ,EAiCvB,OACIW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAD,SAAA,EACNE,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACbC,GAAG,eACH,gBAAc,gBACdC,GAAI,CAACC,gBAAiB,gBAAgBN,UAEtCE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACF,GAAI,CAACG,MAAO,OAAQC,QAAS,OAAQC,eAAgB,UAAUV,UAChEE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,EAAG,EAAGC,SAAU,QAAQb,SAAC,eAG7CF,EAAAA,EAAAA,MAACgB,EAAAA,EAAgB,CAAAd,SAAA,EACbE,EAAAA,EAAAA,KAAA,SACCpB,EAAQiC,OAAS,GAAKhC,EAAQgC,OAAS,GACpCjB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACKlB,EAAQkC,KAAI,CAAC/B,EAAMgC,KAChBnB,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAaF,GAAI,CAACI,QAAS,OAAQS,WAAY,SAAUC,aAAc,GAAGnB,SAAA,EAC1EE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACN,GAAI,CAACe,SAAU,EAAGC,WAAY,GAAGrB,SAAEf,KAC/CiB,EAAAA,EAAAA,KAACoB,EAAAA,EAAW,CAACjB,GAAI,CAACG,MAAO,IAAKe,YAAa,GAAGvB,UAC1CF,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CACHC,MAAM,SACNC,SAAWC,GAAM3C,EAAiBC,EAAM0C,EAAEC,OAAOH,OAAOzB,SAAA,EAExDE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACJ,MAAM,SAAQzB,SAAC,YACzBE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACJ,MAAM,SAAQzB,SAAC,iBAGjCE,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,QAASA,IAAMlC,EAAiBZ,GAAO+C,MAAM,QAAOhC,UAC5DE,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,QAZThB,KAgBblC,EAAQiC,KAAI,CAAC/B,EAAMgC,KAChBnB,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAaF,GAAI,CAACI,QAAS,OAAQS,WAAY,SAAUC,aAAc,GAAGnB,SAAA,EAC1EE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACN,GAAI,CAACe,SAAU,EAAGC,WAAY,GAAGrB,SAAEf,KAC/CiB,EAAAA,EAAAA,KAACoB,EAAAA,EAAW,CAACjB,GAAI,CAACG,MAAO,IAAKe,YAAa,GAAGvB,UAC1CF,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CACHC,MAAM,SACNC,SAAWC,GAAM3C,EAAiBC,EAAM0C,EAAEC,OAAOH,OAAOzB,SAAA,EAExDE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACJ,MAAM,SAAQzB,SAAC,YACzBE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACJ,MAAM,SAAQzB,SAAC,iBAGjCE,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,QAASA,IAAMlC,EAAiBZ,GAAO+C,MAAM,QAAOhC,UAC5DE,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,QAZThB,SAkBlBf,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACN,GAAI,CAACgB,WAAY,GAAGrB,SAAC,wDAM7CF,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAD,SAAA,EACNE,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACbC,GAAG,eACH,gBAAc,gBACdC,GAAI,CAACC,gBAAiB,gBAAgBN,UAEtCE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACF,GAAI,CAACG,MAAO,OAAQC,QAAS,OAAQC,eAAgB,UAAUV,UAChEE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,EAAG,EAAGC,SAAU,QAAQb,SAAC,kBAG7CF,EAAAA,EAAAA,MAACgB,EAAAA,EAAgB,CAACT,GAAI,CAACI,QAAS,OAAQyB,cAAe,SAAUhB,WAAY,UAAUlB,SAAA,EACnFE,EAAAA,EAAAA,KAACoB,EAAAA,EAAW,CAACjB,GAAI,CAAC8B,SAAU,IAAKhB,aAAc,GAAGnB,UAC9CE,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACNC,WAAY,CAACC,UAAW,IACxBlC,GAAG,WACHmC,MAAM,WACNC,QAAQ,WACRf,MAAOpD,EACPqD,SAAWC,GAAMrD,EAAWqD,EAAEC,OAAOH,OACrCgB,WAAS,OAGjB3C,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACF,GAAI,CAACI,QAAS,OAAQC,eAAgB,gBAAiBF,MAAO,OAAQ2B,SAAU,KAAKnC,SAAA,EACtFE,EAAAA,EAAAA,KAACoB,EAAAA,EAAW,CAACjB,GAAI,CAACG,MAAO,OAAOR,UAC5BF,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CACHkB,aAAc,SACdhB,SAxFKiB,IAC7BlE,EAAekE,EAAMf,OAAOH,MAAM,EAwFVY,WAAY,CACRO,KAAM,OACNxC,GAAI,uBAERC,GAAI,CAACG,MAAO,QAAQR,SAAA,EAEpBE,EAAAA,EAAAA,KAAA,UAAQuB,MAAO,SAASzB,SAAC,YACzBE,EAAAA,EAAAA,KAAA,UAAQuB,MAAO,SAASzB,SAAC,gBAGhCtB,GACGwB,EAAAA,EAAAA,KAACpC,EAAO,KAERoC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CAACd,QAhIhBe,UACZnE,GAAe,GACfE,EAAgB,IAEhB,IAGI,IAAe,UAFMjB,EAAUmF,SAAS,kBAAmB,CAACC,SAAU3E,GAAUH,GAE3D,CACjB,MAAMiB,EAAU,IACTnB,EACHc,QAAyB,WAAhBN,EAA2B,IAAIM,EAAST,GAAWS,EAC5DC,QAAyB,WAAhBP,EAA2B,IAAIO,EAASV,GAAWU,GAEhET,EAAW,IACXG,EAAe,UACfR,EAAWkB,EACf,MACIN,EAAgB,+BAExB,CAAE,MAAO8C,GACL9C,EAAgB,iDACpB,CAAC,QACGF,GAAe,EACnB,GAyG8C6D,QAAS,WAAYnC,GAAI,CAAC4C,OAAQ,OAAQzC,MAAO,OAAOR,SAAC,iBAM3FE,EAAAA,EAAAA,KAAA,UACAJ,EAAAA,EAAAA,MAACa,EAAAA,EAAU,CAAEqB,MAAO,QAAQhC,SAAA,CAAC,IAAEpB,aAGxC,EC1FX,EA1FwBb,IAAyB,IAAxB,KAACC,EAAI,WAAEC,GAAWF,EAmCvC,OACI+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAD,SAAA,EACNE,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACbC,GAAG,eACH,gBAAc,gBACdC,GAAI,CAACC,gBAAiB,gBAAgBN,UAEtCE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACF,GAAI,CAACG,MAAO,OAAQC,QAAS,OAAQC,eAAgB,UAAUV,UAChEE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,EAAG,EAAGC,SAAU,QAAQb,SAAC,sBAG7CF,EAAAA,EAAAA,MAACgB,EAAAA,EAAgB,CAAAd,SAAA,EACbE,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACNC,WAAY,CAACC,UAAW,IACxBlC,GAAG,aACHmC,MAAM,QACNC,QAAQ,WACRf,MAAOzD,EAAKkF,SAASC,SACrBzB,SAAWC,GA1CVF,KACjB,MAAMtC,EAAU,IACTnB,EACHkF,SAAU,IACHlF,EAAKkF,SACRC,SAAU1B,IAGlBxD,EAAWkB,EAAQ,EAkCciE,CAAYzB,EAAEC,OAAOH,OACtCgB,WAAS,EACTpC,GAAI,CAACc,aAAc,MAEvBjB,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACNC,WAAY,CAACC,UAAW,IACxBlC,GAAG,YACHmC,MAAM,yBACNC,QAAQ,WACRf,MAAOzD,EAAKkF,SAASG,SACrB3B,SAAWC,GAzCXF,KAChB,MAAMtC,EAAU,IACTnB,EACHkF,SAAU,IACHlF,EAAKkF,SACRG,SAAU5B,IAGlBxD,EAAWkB,EAAQ,EAiCcmE,CAAW3B,EAAEC,OAAOH,OACrCgB,WAAS,EACTpC,GAAI,CAACc,aAAc,MAEvBrB,EAAAA,EAAAA,MAACwB,EAAAA,EAAW,CAAAtB,SAAA,EACRE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAAAX,SAAC,gBACZF,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CACHC,MAAOzD,EAAKkF,SAASK,KACrB7B,SAvEEiB,IACtB,MAAMxD,EAAU,IACTnB,EACHkF,SAAU,IACHlF,EAAKkF,SACRK,KAAMZ,EAAMf,OAAOH,QAG3BxD,EAAWkB,EAAQ,EAgECkB,GAAI,CACAG,MAAO,IACPW,aAAc,GAChBnB,SAAA,EAEFE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACJ,MAAO,QAAQzB,SAAC,YAC1BE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACJ,MAAO,QAAQzB,SAAC,2BAK1CE,EAAAA,EAAAA,KAACsD,EAAW,CAACxF,KAAMA,EAAMC,WAAYA,MACtC,E,cCzEX,MAAML,EAAY,IAAIC,EAAAA,EAqHtB,EApHmBE,IAA0B,IAAzB,MAAC0F,EAAK,WAAEC,GAAW3F,EACnC,MAAM,aAACG,EAAY,KAAEe,IAAQd,EAAAA,EAAAA,YAAWC,EAAAA,IACjCuF,EAAQC,IAAarF,EAAAA,EAAAA,WAAS,IAC9BsF,EAAUC,IAAWvF,EAAAA,EAAAA,UAAS,IAAIkF,KAClCM,EAASC,IAAczF,EAAAA,EAAAA,WAAS,GACjC0F,GAAWC,EAAAA,EAAAA,MAUjB,SAASC,IACLP,GAAU,EACd,CAEA,SAASQ,IACL,OAAOX,EAAMY,QAAUpF,EAAK+D,QAChC,CAmCA,OAjDAsB,EAAAA,EAAAA,YAAU,KACNN,EAAWI,EAAS,GACrB,CAACnF,KAgDAa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIE,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACU,QAAQ,WAAWT,QA/CvC,WACI6B,GAAU,EACd,EA6C2D5D,UAC/CE,EAAAA,EAAAA,KAACqE,EAAAA,EAAQ,CAAClE,GAAI,CAACO,EAAG,QAGtBd,EAAAA,EAAAA,MAAC0E,EAAAA,EAAM,CACHC,YAAU,EACVC,KAAMf,EACNgB,QAASR,EAAYnE,SAAA,EAErBE,EAAAA,EAAAA,KAAC0E,EAAAA,EAAW,CAAA5E,UAACE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACF,GAAI,CAACwE,WAAY,GAAG7E,UAClCE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACE,SAAU,WAAYR,GAAI,CAACyE,WAAY,WAAYC,UAAW,UAAU/E,SAAC,mBAIzFE,EAAAA,EAAAA,KAAC8E,EAAAA,EAAa,CAAAhF,UACVF,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAC4B,SAAU,IAAK9B,GAAI,CACpB4E,GAAI,OACJC,OAAQ,UACRC,OAAQ,iBACRC,UAAW,MACXC,aAAc,OACf7C,QAAQ,YAAWxC,SAAA,EAElBE,EAAAA,EAAAA,KAACoF,EAAe,CAACtH,KAAM6F,EAAU5F,WA7BrD,SAAoBsH,GAChBzB,EAAQyB,EACZ,IA4BqBxB,IACGjE,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAD,SAAA,EACNE,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAACC,GAAG,eAAe,gBAAc,gBAChCC,GAAI,CAACC,gBAAiB,gBAAgBN,UACpDE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACF,GAAI,CAACG,MAAO,OAAQC,QAAS,OAAQC,eAAgB,UAAUV,UAChEE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,EAAG,EAAGC,SAAU,QAAQb,SAAC,qBAG7CF,EAAAA,EAAAA,MAACgB,EAAAA,EAAgB,CAACT,GAAI,CAACK,eAAgB,UAAUV,SAAA,EAC7CF,EAAAA,EAAAA,MAACa,EAAAA,EAAU,CAACoE,UAAW,SAAUnE,EAAG,EAAEZ,SAAA,CAAC,aAASE,EAAAA,EAAAA,KAAA,SAAK,0CAErDA,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CAACd,QA/CxCe,uBACUlF,EAAU4H,WAAW,OAAQ/B,EAAMP,SAAS9C,GAAIlC,GACtD0F,GAAU,GACVK,EAAS,YACb,EA2C6DzB,QAAS,YAAanC,GAAI,CAACoF,QAAS,GACzDzD,MAAO,QAASS,WAAS,EAAAzC,SAAE,4BAOvDF,EAAAA,EAAAA,MAAC4F,EAAAA,EAAa,CAACrF,GAAI,CAACK,eAAgB,UAAUV,SAAA,EAC1CE,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CAACd,QAASoC,EAAa3B,QAAQ,YAAWxC,SAAC,YAGlDE,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CAACd,QAjFxB,WACI,IAAI4D,EAAiB,GACjBC,EAAiB,GAEjBnC,EAAM3E,UAAY+E,EAAS/E,UAC3B6G,EAAiBlC,EAAM3E,QAAQM,QAAOG,IAAWsE,EAAS/E,QAAQQ,SAASC,MAG3EkE,EAAM1E,UAAY8E,EAAS9E,UAC3B6G,EAAiBnC,EAAM1E,QAAQK,QAAOI,IAAWqE,EAAS9E,QAAQO,SAASE,MAG1DmG,EAAeE,OAAOD,GAE9BE,SAAQ7G,IACjBrB,EAAUmF,SAAS,oBAAqB,CAAC9D,KAAMA,GAAOf,EAAa,IAEvEuB,QAAQC,IAAI,6BAA8BC,KAAKC,UAAUiE,IACzDH,EAAWG,GACXD,GAAU,EACd,EA6D+CpB,QAAQ,YAAWxC,SAAC,yBAO5D,E,0ECvHX,MAuDA,EAvDyBjC,IAA4B,IAA3B,MAAE0F,EAAK,WAAEC,GAAY3F,EAqB3C,OACImC,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACIE,EAAAA,EAAAA,KAAC6F,EAAAA,EAAI,CAAA/F,SACAyD,EAAMuC,MAAMhF,KAAKiF,IACdnG,SAAAA,EAAAA,MAACoG,EAAAA,GAAQ,CAEL7F,GAAI,CACA6E,OAAQ,UACRC,OAAQ,iBACRC,UAAW,MACXC,aAAc,OAGlBtD,QAASA,IAvBJoE,KACrB,MAAMC,EAAe3C,EAAMuC,MAAMhF,KAAKiF,GAClCA,EAAK7F,KAAO+F,EACN,IAAKF,EAAMI,OAAwB,MAAhBJ,EAAKI,OAAiB,GAAK,KAC9CJ,IAGVvC,EAAW,IAAKD,EAAOuC,MAAOI,GAAe,EAgBdE,CAAgBL,EAAK7F,IAAKJ,SAAA,EAEzCE,EAAAA,EAAAA,KAACqG,EAAAA,EAAc,CAAAvG,UACXE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAAAP,UAnCJqG,EAoCoBJ,EAAKI,OAlCpC,MADDA,GAEOnG,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,KAEbtG,EAAAA,EAAAA,KAACuG,EAAAA,EAAwB,UAkCxBvG,EAAAA,EAAAA,KAACwG,EAAAA,EAAY,CACTC,QAASV,EAAKA,KACdW,uBAAwB,CAAE/F,SAAU,WAExCX,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAAC+E,KAAK,MAAK7G,UAClBE,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,QApBJb,EAAK7F,IAxB9B,IAAwBiG,CA+CX,OAEN,ECnBX,EAnCkBtI,IAAc,IAAb,MAAC0F,GAAM1F,EAEtB,OACImC,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACIE,EAAAA,EAAAA,KAAC6F,EAAAA,EAAI,CAAA/F,SACAyD,EAAMuC,MAAMhF,KAAKiF,IACdnG,EAAAA,EAAAA,MAACoG,EAAAA,GAAQ,CAEL7F,GAAI,CACA6E,OAAQ,UACRC,OAAQ,iBACRC,UAAW,MACXC,aAAc,MACd0B,YAAa,QACf/G,SAAA,EAEFE,EAAAA,EAAAA,KAACqG,EAAAA,EAAc,CAAAvG,UACXE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,OAGRL,EAAAA,EAAAA,KAACwG,EAAAA,EAAY,CACTC,QAASV,EAAKA,KACdW,uBAAwB,CAAC/F,SAAU,WAEvCX,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAAC+E,KAAK,MAAK7G,UAClBE,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,QAlBJb,EAAK7F,SAwBvB,E,0CC/BX,MA8EA,EA9EkBrC,IAA0B,IAAzB,MAAC0F,EAAK,WAAEC,GAAW3F,EAqBlC,OACImC,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACIE,EAAAA,EAAAA,KAAC6F,EAAAA,EAAI,CAAA/F,UACDE,EAAAA,EAAAA,KAAC8G,EAAAA,GAAe,CAACC,UAtBNC,IACnB,IAAKA,EAAOC,YAAa,OACzB,MAAMC,EAAaF,EAAOG,OAAOpG,MAC3BqG,EAAWJ,EAAOC,YAAYlG,MAC9BsG,EAAW,IAAI9D,EAAMuC,QACpBwB,GAAeD,EAASE,OAAOL,EAAY,GAClDG,EAASE,OAAOH,EAAU,EAAGE,GAC7B/D,EAAMuC,MAAQuB,EACd7D,EAAWD,EAAM,EAciCzD,UACtCE,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,CAACC,YAAY,QAAO3H,SACxB4H,IACE9H,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CACAsH,IAAKD,EAAkBE,YACnBF,EAAkBG,eAAc/H,SAAA,CAEnCyD,EAAMuC,MAAMhF,KAAI,CAACiF,EAAMhF,KACpBf,EAAAA,EAAAA,KAAC8H,EAAAA,GAAS,CACN/G,MAAOA,EAEPgH,YAAahC,EAAK7F,GAAK,GAAGJ,SAExBkI,IACEpI,EAAAA,EAAAA,MAACoG,EAAAA,GAAQ,CACL2B,IAAKK,EAAkBJ,YACnBI,EAAkBC,kBAClBD,EAAkBE,gBACtB/H,GAAI,CACA6E,OAAQ,UACRC,OAAQ,iBACRC,UAAW,MACXC,aAAc,MACd5E,QAAS,OACTS,WAAY,SACZR,eAAgB,iBAElBV,SAAA,EAEFE,EAAAA,EAAAA,KAACqG,EAAAA,EAAc,CAAAvG,UACXE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAAAP,UACAE,EAAAA,EAAAA,KAACmI,EAAAA,EAAa,SAGtBnI,EAAAA,EAAAA,KAACwG,EAAAA,EAAY,CAACC,QAASV,EAAKA,KACdW,uBAAwB,CAAC/F,SAAU,WACjDX,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAAC+E,KAAK,MAAM,aAAW,SACtB9E,QAASA,IAhD7C3B,KAChB,MAAMkI,EAAc,IACb7E,EACHuC,MAAOvC,EAAMuC,MAAM5G,QAAO6G,GAAQA,EAAK7F,KAAOA,KAElDsD,EAAW4E,EAAY,EA2C4CC,CAAWtC,EAAK7F,IAAIJ,UAC3CE,EAAAA,EAAAA,KAACsI,EAAAA,EAAS,UA5BjBvC,EAAK7F,MAkCjBwH,EAAkBa,sBAMxC,E,cChFX,MA+DA,EA/DgB1K,IAA0B,IAAzB,MAAC0F,EAAK,WAAEC,GAAW3F,EAChC,MAAO2K,EAASC,IAAWpK,EAAAA,EAAAA,UAAS,IAmBpC,OACI2B,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UAEIF,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACF,GAAI,CAACI,QAAS,OAAQS,WAAY,SAAU0H,GAAI,GAAG5I,SAAA,EACpDE,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACNC,WAAY,CAACC,UAAW,IACxBlC,GAAG,WACHmC,MAAM,WACNC,QAAQ,WACRf,MAAOiH,EACPhH,SAAWC,GAAMgH,EAAQhH,EAAEC,OAAOH,OAClCgB,WAAS,EACTpC,GAAI,CAAC4C,OAAQ,QACb4F,WAAY,CACRxI,GAAI,CACAyI,qBAAsB,EACtBC,wBAAyB,EACzB,qCAAsC,CAClCD,qBAAsB,EACtBC,wBAAyB,GAE7B9F,OAAQ,YAIpB/C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CACHd,QA3CEiH,KACd,GAAuB,KAAnBN,EAAQO,OAAe,OAC3B,MAAMC,EAAa,CACfC,OAAQ1F,EAAMP,SAAS9C,GACvB6F,KAAMyC,GAGJJ,EAAc,IACb7E,EACHuC,MAAO,IAAIvC,EAAMuC,MAAOkD,IAG5BxF,EAAW4E,GAEXK,EAAQ,GAAG,EA8BCnG,QAAQ,YACRnC,GAAI,CACA+I,oBAAqB,EACrBC,uBAAwB,EACxBpG,OAAQ,OACRqG,SAAU,QACZtJ,UAEFE,EAAAA,EAAAA,KAACqJ,EAAAA,EAAO,UAIjB,EC6BX,EA/EoBxL,IAA0B,IAAzB,MAAC0F,EAAK,WAAEC,GAAW3F,EACpC,MAAM,KAACkB,IAAQd,EAAAA,EAAAA,YAAWC,EAAAA,IACnBoL,EAAQC,IAAalL,EAAAA,EAAAA,WAAS,IAC9BmL,EAAYC,IAAiBpL,EAAAA,EAAAA,WAAS,IAClCU,EAAK+D,WAAaS,EAAMY,OAASZ,EAAM3E,QAAQQ,SAASL,EAAK+D,YA+BxE,OACI9C,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAC4B,SAAU,IAAK9B,GAAI,CAAC4E,GAAI,QAASzC,QAAQ,YAAWxC,SAAA,EAGrDF,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAAP,SAAA,EACAF,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACF,GAAI,CAAC+E,UAAW,GAAGpF,SAAA,EACpBE,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACE,SAAU,WAAYR,GAAI,CAACyE,WAAY,YAAY9E,SAC1DyD,EAAMP,SAASC,YAEpBjD,EAAAA,EAAAA,KAAA,aAEJJ,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACF,GAAI,CAACI,QAAS,OAAQ0E,OAAQ,iBAAkBE,aAAc,EAAGuE,EAAG,GAAG5J,SAAA,EACxEE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACF,GAAI,CAACc,aAAc,EAAG0I,QAAS,IAAKC,WAAY,QAASF,EAAG,GAAG5J,UAChEF,EAAAA,EAAAA,MAACa,EAAAA,EAAU,CAACE,SAAU,QAASR,GAAI,CAACyE,WAAY,WAAYC,UAAW,QAAQ/E,SAAA,CAC1EyD,EAAMP,SAASG,UAChBnD,EAAAA,EAAAA,KAAA,eAGRJ,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACF,GAAI,CAACwJ,QAAS,IAAKC,WAAY,KAAK9J,SAAA,EACrCE,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACU,QAAQ,WAAWT,QAhDlCgI,KACjBN,GAAWD,EAAO,EA+CuDxJ,SAChDwJ,GAAStJ,EAAAA,EAAAA,KAAC8J,EAAAA,EAAQ,CAAC3J,GAAI,CAACO,EAAG,MAAQV,EAAAA,EAAAA,KAAC+J,EAAAA,EAAY,CAAC5J,GAAI,CAAC6E,OAAQ,UAAWtE,EAAG,OAGhF8I,IAAexJ,EAAAA,EAAAA,KAACgK,EAAU,CAACzG,MAAOA,EAAOC,WAAYA,QAG1DxD,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACN,GAAI,CAACwJ,QAAS,IAAKC,WAAY,QAAS/E,UAAW,OAAQnE,EAAG,GAAGZ,SA3CnFmK,MACV,GAAI1G,EAAMY,QAAUpF,EAAK+D,UAAqC,IAAzBS,EAAM3E,QAAQiC,QAAyC,IAAzB0C,EAAM1E,QAAQgC,OAC7E,OAAOb,EAAAA,EAAAA,KAAA,SACJ,CACH,MAAMkK,EAAoB,IAAI3G,EAAM3E,WAAY2E,EAAM1E,SAASsL,KAAK,MAC9DC,EAAW7G,EAAMY,MAAQ,KAAO+F,EAEtC,OACItK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIE,EAAAA,EAAAA,KAACqK,EAAAA,EAAS,CAAClK,GAAI,CAACmK,cAAe,SAAUC,GAAI,KAC5CH,IAGb,GA+BqBH,WAIhBX,GACGtJ,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAAAP,UA1DKuD,EA0DSE,EAxDjB,UADDF,EAAKL,SAASK,MAEPrD,EAAAA,EAAAA,KAACwK,EAAgB,CAACjH,MAAOA,EAAOC,WAAYA,KAE5CxD,EAAAA,EAAAA,KAACyK,EAAS,CAAClH,MAAOA,QAuDzBvD,EAAAA,EAAAA,KAAC0K,EAAS,CAACnH,MAAOA,EAAOC,WAAYA,KAGzCxD,EAAAA,EAAAA,KAAC2K,EAAO,CAACpH,MAAOA,EAAOC,WAAYA,SA/D3C,IAAqBH,CAiEd,EC9EL3F,GAAY,IAAIC,EAAAA,EAwFtB,GAtFiBiN,KACb,MAAM,GAAC1K,IAAM2K,EAAAA,EAAAA,MAEP,aAAC7M,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3B4M,EAASC,IAAc1M,EAAAA,EAAAA,WAAS,IAChCkF,EAAOyH,IAAW3M,EAAAA,EAAAA,UAAS,OAC3B4M,EAAaC,IAAkB7M,EAAAA,EAAAA,UAAS,OAG/C+F,EAAAA,EAAAA,YAAU,KACYxB,WACd,IACI,MAAMuI,QAAazN,GAAU0N,QAAQ,QAADzF,OAASzF,GAAMlC,GACnDgN,EAAQG,EACZ,CAAE,MAAOE,GACL9L,QAAQ8L,MAAM,sBAAuBA,EACzC,CAAC,QACGN,GAAW,EACf,GAEJO,GAEA,MAAMC,EAAS,IAAIC,IAAJ,CAAW,4BACpBC,EAAS,IAAIC,EAAAA,EAAO,CACtBC,iBAAkBA,IAAMJ,EACxBK,UAAWA,KACPrM,QAAQC,IAAI,0BACZiM,EAAOI,UAAU,eAADlG,OAAgBzF,IAAO4L,IACnC,MAAMC,EAActM,KAAKuM,MAAMF,EAAQG,MACvCjB,GAAQkB,IAAQ,IACTA,EACHpG,MAAOoG,EAASpG,MAAMhF,KAAIiF,GACtBA,EAAK7F,KAAO6L,EAAY7L,GAAK6L,EAAchG,OAEhD,GACL,EAENoG,aAAeC,IACX7M,QAAQ8L,MAAM,0BAA4Be,EAAMC,QAAiB,SACjE9M,QAAQ8L,MAAM,uBAAyBe,EAAMH,KAAK,IAe1D,OAXAV,EAAOe,QAAU,SAAU7J,GACvBlD,QAAQ8L,MAAM,2BAA4B5I,EAC9C,EAEA8I,EAAOgB,QAAU,SAAU9J,GACvBlD,QAAQ8L,MAAM,4BAA6B5I,EAC/C,EAEAgJ,EAAOe,WACPtB,EAAeO,GAER,KACCA,GAAUA,EAAOgB,WACjBhB,EAAOiB,YACX,CACH,GACF,CAAC1O,IAYJ,OACIgC,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,SACKgL,GACGlL,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAAP,SAAA,EACAE,EAAAA,EAAAA,KAAC2M,EAAAA,EAAgB,KACjB3M,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAAAX,SAAC,qBAIhBE,EAAAA,EAAAA,KAAC4M,EAAW,CAACrJ,MAAOA,EAAOC,WAnBnBvE,IAEhB+L,EAAQ/L,GAEJgM,GAAeA,EAAYwB,YAC3BxB,EAAY4B,QAAQ,aAADlH,OAAczF,GAAM,CAAC,EAAGT,KAAKC,UAAUT,IAC1DM,QAAQC,IAAI,4BAChB,KAeG,C","sources":["components/HandleUsers.js","components/EditListDetails.js","components/EditDialog.js","components/CheckListDisplay.js","components/BasicList.js","components/EditItems.js","components/AddItem.js","components/ListDisplay.js","pages/ViewList.js"],"sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {\r\n    Accordion, AccordionDetails, AccordionSummary,\r\n    FormControl, MenuItem, Select, TextField, Typography,\r\n    IconButton, Box, Button\r\n} from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nconst apiCaller = new ApiCaller();\r\n\r\nfunction Spinner() {\r\n    return null;\r\n}\r\n\r\nconst HandleUsers = ({list, updateCopy}) => {\r\n    const {loginDetails} = useContext(AuthContext);\r\n    const [newUser, setNewUser] = useState(\"\");\r\n    const [newUserRole, setNewUserRole] = useState(\"VIEWER\");\r\n    const [userCheckLoading, setUserLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const editors = list.editors || [];\r\n    const viewers = list.viewers || [];\r\n\r\n    const handleRoleChange = (user, newRole) => {\r\n        const newList = {\r\n            ...list,\r\n            editors: newRole === \"EDITOR\"\r\n                ? [...editors, user].filter(u => !viewers.includes(u))\r\n                : editors.filter((editor) => editor !== user),\r\n            viewers: newRole === \"VIEWER\"\r\n                ? [...viewers, user].filter(u => !editors.includes(u))\r\n                : viewers.filter((viewer) => viewer !== user),\r\n        };\r\n        console.log(\"updating users in HandleUsers, \", JSON.stringify(newList));\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const handleRemoveUser = (user) => {\r\n        const newList = {\r\n            ...list,\r\n            editors: editors.filter((editor) => editor !== user),\r\n            viewers: viewers.filter((viewer) => viewer !== user),\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const addUser = async () => {\r\n        setUserLoading(true);\r\n        setErrorMessage(\"\");\r\n\r\n        try {\r\n            const result = await apiCaller.sendPost(\"user/userExists\", {username: newUser}, loginDetails);\r\n\r\n            if (result === true) {\r\n                const newList = {\r\n                    ...list,\r\n                    editors: newUserRole === \"EDITOR\" ? [...editors, newUser] : editors,\r\n                    viewers: newUserRole === \"VIEWER\" ? [...viewers, newUser] : viewers,\r\n                };\r\n                setNewUser(\"\");\r\n                setNewUserRole(\"VIEWER\");\r\n                updateCopy(newList);\r\n            } else {\r\n                setErrorMessage(\"The username does not exist.\");\r\n            }\r\n        } catch (e) {\r\n            setErrorMessage(\"An error occurred while checking the username.\");\r\n        } finally {\r\n            setUserLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleNewUserRoleChange = (event) => {\r\n        setNewUserRole(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    id=\"panel-header\"\r\n                    aria-controls=\"panel-content\"\r\n                    sx={{backgroundColor: \"primary.main\"}}\r\n                >\r\n                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                        <Typography p={1} fontSize={\"large\"}>Users</Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <br/>\r\n                    {editors.length > 0 || viewers.length > 0 ? (\r\n                        <>\r\n                            {editors.map((user, index) => (\r\n                                <Box key={index} sx={{display: \"flex\", alignItems: \"center\", marginBottom: 1}}>\r\n                                    <Typography sx={{flexGrow: 1, marginLeft: 2}}>{user}</Typography>\r\n                                    <FormControl sx={{width: 100, marginRight: 2}}>\r\n                                        <Select\r\n                                            value=\"EDITOR\"\r\n                                            onChange={(e) => handleRoleChange(user, e.target.value)}\r\n                                        >\r\n                                            <MenuItem value=\"EDITOR\">Editor</MenuItem>\r\n                                            <MenuItem value=\"VIEWER\">Viewer</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <IconButton onClick={() => handleRemoveUser(user)} color=\"error\">\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </Box>\r\n                            ))}\r\n                            {viewers.map((user, index) => (\r\n                                <Box key={index} sx={{display: \"flex\", alignItems: \"center\", marginBottom: 1}}>\r\n                                    <Typography sx={{flexGrow: 1, marginLeft: 2}}>{user}</Typography>\r\n                                    <FormControl sx={{width: 100, marginRight: 2}}>\r\n                                        <Select\r\n                                            value=\"VIEWER\"\r\n                                            onChange={(e) => handleRoleChange(user, e.target.value)}\r\n                                        >\r\n                                            <MenuItem value=\"EDITOR\">Editor</MenuItem>\r\n                                            <MenuItem value=\"VIEWER\">Viewer</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <IconButton onClick={() => handleRemoveUser(user)} color=\"error\">\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </Box>\r\n                            ))}\r\n                        </>\r\n                    ) : (\r\n                        <Typography sx={{marginLeft: 2}}>\r\n                            No users, only you have access to this list.\r\n                        </Typography>\r\n                    )}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    id=\"panel-header\"\r\n                    aria-controls=\"panel-content\"\r\n                    sx={{backgroundColor: \"primary.main\"}}\r\n                >\r\n                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                        <Typography p={1} fontSize={\"large\"}>Add User</Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails sx={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                    <FormControl sx={{maxWidth: 350, marginBottom: 2}}>\r\n                        <TextField\r\n                            inputProps={{maxLength: 50}}\r\n                            id=\"new-item\"\r\n                            label=\"Username\"\r\n                            variant=\"outlined\"\r\n                            value={newUser}\r\n                            onChange={(e) => setNewUser(e.target.value)}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n                    <Box sx={{display: \"flex\", justifyContent: \"space-between\", width: \"100%\", maxWidth: 350}}>\r\n                        <FormControl sx={{width: \"48%\"}}>\r\n                            <Select\r\n                                defaultValue={\"VIEWER\"}\r\n                                onChange={handleNewUserRoleChange}\r\n                                inputProps={{\r\n                                    name: \"role\",\r\n                                    id: \"uncontrolled-native\",\r\n                                }}\r\n                                sx={{width: \"100%\"}}\r\n                            >\r\n                                <option value={\"VIEWER\"}>Viewer</option>\r\n                                <option value={\"EDITOR\"}>Editor</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                        {userCheckLoading ? (\r\n                            <Spinner/>\r\n                        ) : (\r\n                            <Button onClick={addUser} variant={\"outlined\"} sx={{height: \"56px\", width: \"48%\"}}>\r\n                                Add User\r\n                            </Button>\r\n                        )}\r\n\r\n                    </Box>\r\n                    <br/>\r\n                    <Typography  color={\"error\"}> {errorMessage}</Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HandleUsers;\r\n","import React from 'react';\r\nimport {\r\n    Accordion, AccordionDetails, AccordionSummary, Box,\r\n    FormControl, MenuItem, Select, TextField, Typography\r\n} from \"@mui/material\";\r\nimport HandleUsers from \"./HandleUsers\";\r\n\r\nconst EditListDetails = ({list, updateCopy}) => {\r\n\r\n    const handleTypeChange = (event) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                type: event.target.value,\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const updateTitle = (value) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                listName: value,\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const updateDesc = (value) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                listDesc: value,\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    id=\"panel-header\"\r\n                    aria-controls=\"panel-content\"\r\n                    sx={{backgroundColor: \"primary.main\"}}\r\n                >\r\n                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                        <Typography p={1} fontSize={\"large\"}>List Details</Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <br/>\r\n                    <TextField\r\n                        inputProps={{maxLength: 40}}\r\n                        id=\"list-title\"\r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n                        value={list.listInfo.listName}\r\n                        onChange={(e) => updateTitle(e.target.value)}\r\n                        fullWidth\r\n                        sx={{marginBottom: 1}}\r\n                    />\r\n                    <TextField\r\n                        inputProps={{maxLength: 40}}\r\n                        id=\"list-desc\"\r\n                        label=\"Description (optional)\"\r\n                        variant=\"outlined\"\r\n                        value={list.listInfo.listDesc}\r\n                        onChange={(e) => updateDesc(e.target.value)}\r\n                        fullWidth\r\n                        sx={{marginBottom: 1}}\r\n                    />\r\n                    <FormControl>\r\n                        <Typography>List type:</Typography>\r\n                        <Select\r\n                            value={list.listInfo.type}\r\n                            onChange={handleTypeChange}\r\n                            sx={{\r\n                                width: 200,\r\n                                marginBottom: 2,\r\n                            }}\r\n                        >\r\n                            <MenuItem value={\"BASIC\"}>Normal</MenuItem>\r\n                            <MenuItem value={\"CHECK\"}>Checklist</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <HandleUsers list={list} updateCopy={updateCopy}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditListDetails;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {\r\n    Box,\r\n    IconButton,\r\n    Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Dialog,\r\n    AccordionSummary,\r\n    Accordion,\r\n    AccordionDetails\r\n} from '@mui/material';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport EditListDetails from \"./EditListDetails\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst apiCaller = new ApiCaller()\r\nconst EditDialog = ({uList, updateList}) => {\r\n    const {loginDetails, user} = useContext(AuthContext);\r\n    const [dialog, setDialog] = useState(false);\r\n    const [listCopy, setCopy] = useState({...uList})\r\n    const [isOwner, setIsOwner] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setIsOwner(ownsList)\r\n    }, [user]);\r\n\r\n    function openDialog() {\r\n        setDialog(true);\r\n    }\r\n\r\n    function closeDialog() {\r\n        setDialog(false);\r\n    }\r\n\r\n    function ownsList() {\r\n        return uList.owner === user.username;\r\n    }\r\n\r\n\r\n    function saveAndClose() {\r\n        let deletedEditors = [];\r\n        let deletedViewers = [];\r\n\r\n        if (uList.editors !== listCopy.editors) {\r\n            deletedEditors = uList.editors.filter(editor => !listCopy.editors.includes(editor));\r\n        }\r\n\r\n        if (uList.viewers !== listCopy.viewers) {\r\n            deletedViewers = uList.viewers.filter(viewer => !listCopy.viewers.includes(viewer));\r\n        }\r\n\r\n        const deletedUsers = deletedEditors.concat(deletedViewers)\r\n\r\n        deletedUsers.forEach(user => {\r\n            apiCaller.sendPost(\"user/removeEditor\", {user: user}, loginDetails)\r\n        });\r\n        console.log(\"This is the updated, copy:\", JSON.stringify(listCopy))\r\n        updateList(listCopy)\r\n        setDialog(false);\r\n    }\r\n\r\n    async function deleteList() {\r\n        await apiCaller.sendDelete(\"list\", uList.listInfo.id, loginDetails)\r\n        setDialog(false)\r\n        navigate(`/overview`);\r\n    }\r\n\r\n    function updateCopy(newCopy) {\r\n        setCopy(newCopy)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IconButton variant=\"outlined\" onClick={openDialog}>\r\n                <EditIcon sx={{p: 1}}/>\r\n            </IconButton>\r\n\r\n            <Dialog\r\n                fullScreen\r\n                open={dialog}\r\n                onClose={closeDialog}\r\n            >\r\n                <DialogTitle><Box sx={{paddingTop: 2}}>\r\n                    <Typography fontSize={\"xx-large\"} sx={{fontFamily: 'Garamond', textAlign: 'center'}}>\r\n                        Edit List\r\n                    </Typography>\r\n                </Box></DialogTitle>\r\n                <DialogContent>\r\n                    <Box maxWidth={400} sx={{\r\n                        mx: 'auto',\r\n                        cursor: 'pointer',\r\n                        border: '1px solid #ccc',\r\n                        marginTop: '5px',\r\n                        borderRadius: '5px',\r\n                    }} variant=\"contained\">\r\n\r\n                        <EditListDetails list={listCopy} updateCopy={updateCopy}></EditListDetails>\r\n                        {isOwner && (\r\n                            <Accordion>\r\n                                <AccordionSummary id=\"panel-header\" aria-controls=\"panel-content\"\r\n                                                  sx={{backgroundColor: \"primary.main\"}} >\r\n                                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                                        <Typography p={1} fontSize={\"large\"}>Delete list</Typography>\r\n                                    </Box>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails sx={{justifyContent: 'center'}}>\r\n                                    <Typography textAlign={'center'} p={1}>Warning: <br/>Deleting a list cannot be\r\n                                        reversed.</Typography>\r\n                                    <Button onClick={deleteList} variant={\"contained\"} sx={{padding: 2}}\r\n                                            color={\"error\"} fullWidth >Delete list</Button>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        )}\r\n\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions sx={{justifyContent: 'center'}}>\r\n                    <Button onClick={closeDialog} variant=\"contained\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={saveAndClose} variant=\"contained\">\r\n                        Save Changes\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditDialog;\r\n","import React from 'react';\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    IconButton,\r\n    Icon\r\n} from '@mui/material';\r\n\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\n\r\nconst CheckListDisplay = ({ uList, updateList }) => {\r\n\r\n    function getCheckStatus(status) {\r\n        switch (status) {\r\n            case '1':\r\n                return <CheckBoxIcon />;\r\n            default:\r\n                return <CheckBoxOutlineBlankIcon />;\r\n        }\r\n    }\r\n\r\n    const handleItemClick = (itemId) => {\r\n        const updatedItems = uList.items.map((item) =>\r\n            item.id === itemId\r\n                ? { ...item, status: item.status === '1' ? '' : '1' }\r\n                : item\r\n        );\r\n\r\n        updateList({ ...uList, items: updatedItems });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {uList.items.map((item) => (\r\n                    <ListItem\r\n                        key={item.id}\r\n                        sx={{\r\n                            cursor: 'pointer',\r\n                            border: '1px solid #ccc',\r\n                            marginTop: '5px',\r\n                            borderRadius: '5px',\r\n\r\n                        }}\r\n                        onClick={() => handleItemClick(item.id)} // Add onClick handler here\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Box>\r\n                                {getCheckStatus(item.status)}\r\n                            </Box>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={item.item}\r\n                            primaryTypographyProps={{ fontSize: '18px' }}\r\n                        />\r\n                        <IconButton edge=\"end\" >\r\n                            <Icon></Icon>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckListDisplay;\r\n","import React from 'react';\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    IconButton,\r\n    Icon\r\n} from '@mui/material';\r\n\r\nconst BasicList = ({uList}) => {\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {uList.items.map((item) => (\r\n                    <ListItem\r\n                        key={item.id}\r\n                        sx={{\r\n                            cursor: 'pointer',\r\n                            border: '1px solid #ccc',\r\n                            marginTop: '5px',\r\n                            borderRadius: '5px',\r\n                            borderColor: 'gray'\r\n                        }}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Box>\r\n                            </Box>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={item.item}\r\n                            primaryTypographyProps={{fontSize: '18px'}}\r\n                        />\r\n                        <IconButton edge=\"end\">\r\n                            <Icon></Icon>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicList;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport {DragDropContext, Draggable, Droppable} from \"@hello-pangea/dnd\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {DragIndicator} from '@mui/icons-material';\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst EditItems = ({uList, updateList}) => {\r\n\r\n    const handleDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const startIndex = result.source.index;\r\n        const endIndex = result.destination.index;\r\n        const copyList = [...uList.items];\r\n        const [reorderItem] = copyList.splice(startIndex, 1);\r\n        copyList.splice(endIndex, 0, reorderItem);\r\n        uList.items = copyList;\r\n        updateList(uList);\r\n    };\r\n\r\n    const removeItem = (id) => {\r\n        const updatedList = {\r\n            ...uList,\r\n            items: uList.items.filter(item => item.id !== id)\r\n        };\r\n        updateList(updatedList);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                <DragDropContext onDragEnd={handleDragEnd}>\r\n                    <Droppable droppableId=\"items\">\r\n                        {(droppableProvider) => (\r\n                            <Box\r\n                                ref={droppableProvider.innerRef}\r\n                                {...droppableProvider.droppableProps}\r\n                            >\r\n                                {uList.items.map((item, index) => (\r\n                                    <Draggable\r\n                                        index={index}\r\n                                        key={item.id}\r\n                                        draggableId={item.id + \"\"}\r\n                                    >\r\n                                        {(draggableProvider) => (\r\n                                            <ListItem\r\n                                                ref={draggableProvider.innerRef}\r\n                                                {...draggableProvider.draggableProps}\r\n                                                {...draggableProvider.dragHandleProps}\r\n                                                sx={{\r\n                                                    cursor: 'pointer',\r\n                                                    border: '1px solid #ccc',\r\n                                                    marginTop: '5px',\r\n                                                    borderRadius: '5px',\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    justifyContent: 'space-between',\r\n\r\n                                                }}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Box>\r\n                                                        <DragIndicator/>\r\n                                                    </Box>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText primary={item.item}\r\n                                                              primaryTypographyProps={{fontSize: '18px'}}/>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\"\r\n                                                            onClick={() => removeItem(item.id)}>\r\n                                                    <ClearIcon/>\r\n                                                </IconButton>\r\n                                            </ListItem>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {droppableProvider.placeholder}\r\n                            </Box>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditItems;\r\n","import React, {useState} from 'react';\r\nimport {Box, Button, TextField} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\n\r\nconst AddItem = ({uList, updateList}) => {\r\n    const [newItem, setItem] = useState('');\r\n\r\n    const addToList = () => {\r\n        if (newItem.trim() === '') return;\r\n        const newItemObj = {\r\n            listId: uList.listInfo.id,\r\n            item: newItem\r\n        };\r\n\r\n        const updatedList = {\r\n            ...uList,\r\n            items: [...uList.items, newItemObj]\r\n        };\r\n\r\n        updateList(updatedList);\r\n\r\n        setItem('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Box sx={{display: 'flex', alignItems: 'center', mt: 2}}>\r\n                <TextField\r\n                    inputProps={{maxLength: 33}}\r\n                    id=\"new-item\"\r\n                    label=\"New Item\"\r\n                    variant=\"outlined\"\r\n                    value={newItem}\r\n                    onChange={(e) => setItem(e.target.value)}\r\n                    fullWidth\r\n                    sx={{height: '56px'}}\r\n                    InputProps={{\r\n                        sx: {\r\n                            borderTopRightRadius: 0,\r\n                            borderBottomRightRadius: 0,\r\n                            '& .MuiOutlinedInput-notchedOutline': {\r\n                                borderTopRightRadius: 0,\r\n                                borderBottomRightRadius: 0,\r\n                            },\r\n                            height: '56px',\r\n                        }\r\n                    }}\r\n                />\r\n                <Button\r\n                    onClick={addToList}\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                        borderTopLeftRadius: 0,\r\n                        borderBottomLeftRadius: 0,\r\n                        height: '56px',\r\n                        minWidth: '56px',\r\n                    }}\r\n                >\r\n                    <AddIcon/>\r\n                </Button>\r\n            </Box>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddItem;\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Box, IconButton} from '@mui/material';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\r\nimport EditDialog from \"./EditDialog\";\r\nimport CheckListDisplay from \"./CheckListDisplay\";\r\nimport BasicList from \"./BasicList\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport EditItems from \"./EditItems\";\r\nimport AddItem from \"./AddItem\";\r\n\r\nconst ListDisplay = ({uList, updateList}) => {\r\n    const {user} = useContext(AuthContext);\r\n    const [locked, setLocked] = useState(true);\r\n    const [editRights, setEditRights] = useState(() => {\r\n        return user.username === uList.owner || uList.editors.includes(user.username);\r\n    });\r\n\r\n    const toggleLocked = () => {\r\n        setLocked(!locked);\r\n    };\r\n    function getListType(type) {\r\n        switch (type.listInfo.type) {\r\n            case 'CHECK':\r\n                return <CheckListDisplay uList={uList} updateList={updateList}/>;\r\n            default:\r\n                return <BasicList uList={uList}/>;\r\n        }\r\n    }\r\n\r\n    const users = () => {\r\n        if (uList.owner === user.username && uList.editors.length === 0 && uList.viewers.length === 0) {\r\n            return <br/>\r\n        } else {\r\n            const editorsAndViewers = [...uList.editors, ...uList.viewers].join(\", \");\r\n            const allUsers = uList.owner + \", \" + editorsAndViewers\r\n\r\n            return (\r\n                <>\r\n                    <GroupIcon sx={{verticalAlign: 'middle', mr: 1}}/>\r\n                    {allUsers}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box maxWidth={750} sx={{mx: 'auto'}} variant=\"contained\">\r\n\r\n\r\n                <Box>\r\n                    <Box sx={{marginTop: 2}}>\r\n                        <Typography fontSize={\"xx-large\"} sx={{fontFamily: 'Garamond'}}>\r\n                            {uList.listInfo.listName}\r\n                        </Typography>\r\n                        <br/>\r\n                    </Box>\r\n                    <Box sx={{display: 'grid', border: '1px solid #ccc', borderRadius: 2, m: 2}}>\r\n                        <Box sx={{marginBottom: 2, gridRow: '1', gridColumn: \"1 / 2\", m: 1}}>\r\n                            <Typography fontSize={\"large\"} sx={{fontFamily: 'Garamond', textAlign: 'left'}}>\r\n                                {uList.listInfo.listDesc}\r\n                                <br/>\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box sx={{gridRow: '1', gridColumn: '3'}}>\r\n                            <IconButton variant=\"outlined\" onClick={toggleLocked}>\r\n                                {locked ? <LockIcon sx={{p: 1}}/> : <LockOpenIcon sx={{cursor: 'pointer', p: 1}}/>}\r\n                            </IconButton>\r\n\r\n                            {editRights && (<EditDialog uList={uList} updateList={updateList}></EditDialog>)}\r\n\r\n                        </Box>\r\n                        <Typography sx={{gridRow: '2', gridColumn: '1 / 3', textAlign: 'left', p: 1}}>\r\n                            {users()}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            {locked ? (\r\n                <Box>{getListType(uList)}</Box>\r\n            ) : (\r\n                <EditItems uList={uList} updateList={updateList}/>\r\n            )}\r\n\r\n            <AddItem uList={uList} updateList={updateList}></AddItem>\r\n        </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListDisplay;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Box,  CircularProgress} from '@mui/material';\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport SockJS from \"sockjs-client\";\r\nimport {Client} from \"@stomp/stompjs\";\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport ListDisplay from \"../components/ListDisplay\";\r\n\r\nconst apiCaller = new ApiCaller();\r\n\r\nconst ViewList = () => {\r\n    const {id} = useParams();\r\n\r\n    const {loginDetails} = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [uList, setList] = useState(null);\r\n    const [stompClient, setStompClient] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchList = async () => {\r\n            try {\r\n                const data = await apiCaller.sendGet(`list/${id}`, loginDetails);\r\n                setList(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching data\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchList();\r\n\r\n        const socket = new SockJS('http://localhost:8080/ws');\r\n        const client = new Client({\r\n            webSocketFactory: () => socket,\r\n            onConnect: () => {\r\n                console.log('Connected to WebSocket');\r\n                client.subscribe(`/topic/list/${id}`, (message) => {\r\n                    const updatedItem = JSON.parse(message.body);\r\n                    setList(prevList => ({\r\n                        ...prevList,\r\n                        items: prevList.items.map(item =>\r\n                            item.id === updatedItem.id ? updatedItem : item\r\n                        )\r\n                    }));\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error('Broker reported error: ' + frame.headers['message']);\r\n                console.error('Additional details: ' + frame.body);\r\n            }\r\n\r\n        });\r\n        socket.onclose = function (event) {\r\n            console.error('WebSocket is closed now.', event);\r\n        };\r\n\r\n        socket.onerror = function (event) {\r\n            console.error('WebSocket error observed:', event);\r\n        };\r\n\r\n        client.activate();\r\n        setStompClient(client);\r\n\r\n        return () => {\r\n            if (client && client.connected) {\r\n                client.deactivate();\r\n            }\r\n        };\r\n    }, [loginDetails]);\r\n\r\n    const updateList = (newList) => {\r\n\r\n        setList(newList)\r\n\r\n        if (stompClient && stompClient.connected) {\r\n            stompClient.publish(`/app/list/${id}`, {}, JSON.stringify(newList));\r\n            console.log(\"Sent update to WebSocket\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <Box>\r\n                    <CircularProgress/>\r\n                    <Typography>Loading List</Typography>\r\n                </Box>\r\n            ) : (\r\n\r\n                <ListDisplay uList={uList} updateList={updateList}></ListDisplay>\r\n\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default ViewList;\r\n\r\n"],"names":["apiCaller","ApiCaller","Spinner","_ref","list","updateCopy","loginDetails","useContext","AuthContext","newUser","setNewUser","useState","newUserRole","setNewUserRole","userCheckLoading","setUserLoading","errorMessage","setErrorMessage","editors","viewers","handleRoleChange","user","newRole","newList","filter","u","includes","editor","viewer","console","log","JSON","stringify","handleRemoveUser","_jsxs","_Fragment","children","Accordion","_jsx","AccordionSummary","id","sx","backgroundColor","Box","width","display","justifyContent","Typography","p","fontSize","AccordionDetails","length","map","index","alignItems","marginBottom","flexGrow","marginLeft","FormControl","marginRight","Select","value","onChange","e","target","MenuItem","IconButton","onClick","color","DeleteIcon","flexDirection","maxWidth","TextField","inputProps","maxLength","label","variant","fullWidth","defaultValue","event","name","Button","async","sendPost","username","height","listInfo","listName","updateTitle","listDesc","updateDesc","type","HandleUsers","uList","updateList","dialog","setDialog","listCopy","setCopy","isOwner","setIsOwner","navigate","useNavigate","closeDialog","ownsList","owner","useEffect","EditIcon","Dialog","fullScreen","open","onClose","DialogTitle","paddingTop","fontFamily","textAlign","DialogContent","mx","cursor","border","marginTop","borderRadius","EditListDetails","newCopy","sendDelete","padding","DialogActions","deletedEditors","deletedViewers","concat","forEach","List","items","item","ListItem","itemId","updatedItems","status","handleItemClick","ListItemAvatar","CheckBoxIcon","CheckBoxOutlineBlankIcon","ListItemText","primary","primaryTypographyProps","edge","Icon","borderColor","DragDropContext","onDragEnd","result","destination","startIndex","source","endIndex","copyList","reorderItem","splice","Droppable","droppableId","droppableProvider","ref","innerRef","droppableProps","Draggable","draggableId","draggableProvider","draggableProps","dragHandleProps","DragIndicator","updatedList","removeItem","ClearIcon","placeholder","newItem","setItem","mt","InputProps","borderTopRightRadius","borderBottomRightRadius","addToList","trim","newItemObj","listId","borderTopLeftRadius","borderBottomLeftRadius","minWidth","AddIcon","locked","setLocked","editRights","setEditRights","m","gridRow","gridColumn","toggleLocked","LockIcon","LockOpenIcon","EditDialog","users","editorsAndViewers","join","allUsers","GroupIcon","verticalAlign","mr","CheckListDisplay","BasicList","EditItems","AddItem","ViewList","useParams","loading","setLoading","setList","stompClient","setStompClient","data","sendGet","error","fetchList","socket","SockJS","client","Client","webSocketFactory","onConnect","subscribe","message","updatedItem","parse","body","prevList","onStompError","frame","headers","onclose","onerror","activate","connected","deactivate","CircularProgress","ListDisplay","publish"],"sourceRoot":""}