{"version":3,"file":"static/js/581.d94de271.chunk.js","mappings":"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","sources":["ApiCaller.js","components/BasicList.js","components/CheckListDisplay.js","components/ListDesc.js","components/PageHeader.js","components/EditItems.js","components/AddItem.js","components/EditListDetails.js","components/PublicListSettings.js","components/HandleUsers.js","components/ViewOnlyUsers.js","components/BulkAdd.js","components/ListDialog.js","components/ListOptions.js","components/LinkedList.js","components/ListDisplay.js","pages/ViewList.js"],"sourcesContent":["import {BASE_URL} from \"./constants\";\r\n\r\nexport class ApiCaller {\r\n\r\n\r\n    baseUrl = BASE_URL\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async sendPost(path, data, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            console.log(await response.json())\r\n            const errorResponse = await response.json()\r\n            throw new Error(errorResponse)\r\n        }\r\n        return  await response.json()\r\n    }\r\n    async sendPostNoLogin(path, data) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            const errorResponse = await response.json()\r\n            throw new Error(errorResponse)\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n\r\n    async sendGet(path, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json();\r\n    }\r\n    async sendGetNoAuth(path) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json();\r\n    }\r\n\r\n    async sendDelete(path, data, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json()\r\n    }\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    IconButton,\r\n    Icon\r\n} from '@mui/material';\r\n\r\nconst BasicList = ({uList}) => {\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {uList.items.map((item) => (\r\n                    <ListItem\r\n                        key={item.id}\r\n                        sx={{\r\n                            cursor: 'pointer',\r\n                            border: '1px solid ',\r\n                            borderColor: 'primary.darker',\r\n                            marginTop: '5px',\r\n                            borderRadius: '5px',\r\n                        }}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Box>\r\n                            </Box>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={item.item}\r\n                            primaryTypographyProps={{fontSize: '18px'}}\r\n                        />\r\n                        <IconButton edge=\"end\">\r\n                            <Icon></Icon>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicList;\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    IconButton,\r\n    Icon\r\n} from '@mui/material';\r\n\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nconst CheckListDisplay = ({ uList, updateList }) => {\r\n    const {user} = useContext(AuthContext);\r\n    const [editRights, setEditRights] = useState(() => {\r\n        return user.username === uList.owner || uList.editors.includes(user.username);\r\n    });\r\n\r\n    function getCheckStatus(status) {\r\n        switch (status) {\r\n            case '1':\r\n                return <CheckBoxIcon sx={{color:'secondary.main'}}/>;\r\n            default:\r\n                return <CheckBoxOutlineBlankIcon sx={{color:'secondary.main'}} />;\r\n        }\r\n    }\r\n\r\n    const handleItemClick = (itemId) => {\r\n        if(editRights){\r\n            const updatedItems = uList.items.map((item) =>\r\n                item.id === itemId\r\n                    ? { ...item, itemStatus: item.itemStatus === '1' ? '' : '1' }\r\n                    : item\r\n            );\r\n            updateList({ ...uList, items: updatedItems });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {uList.items.map((item) => (\r\n                    <ListItem\r\n                        key={item.id}\r\n                        sx={{\r\n                            cursor: 'pointer',\r\n                            border: '1px solid ',\r\n                            borderColor: 'primary.darker',\r\n                            marginTop: '5px',\r\n                            borderRadius: '5px',\r\n                        }}\r\n                        onClick={() => handleItemClick(item.id)}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Box>\r\n                                {getCheckStatus(item.itemStatus)}\r\n                            </Box>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={item.item}\r\n                            primaryTypographyProps={{ fontSize: '18px' }}\r\n                        />\r\n                        <IconButton edge=\"end\" >\r\n                            <Icon></Icon>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckListDisplay;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst ListDesc = ({uList}) => {\r\n\r\n    const description = () => {\r\n        if (uList.listInfo.listDesc !== null) {\r\n            return <>\r\n                <Box sx={{marginBottom: 1, gridRow: '1', gridColumn: \"1 / 2\", m: 1, paddingLeft: 2, paddingRight: 2}}>\r\n                    <Typography fontSize={\"large\"}>\r\n                        {uList.listInfo.listDesc}\r\n                        <br/>\r\n                    </Typography>\r\n                </Box>\r\n            </>\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {description()}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListDesc;\r\n\r\n","import {Typography} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst PageHeader = ({title}) => {\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ paddingTop: 2, paddingRight:5, paddingLeft:5}}>\r\n                <Typography fontSize={\"xx-large\"} sx={{ fontFamily: 'Garamond', color:'primary.main'}}>\r\n                    <strong>{title}</strong>\r\n                </Typography>\r\n                <br />\r\n            </Box>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageHeader;\r\n\r\n\r\n\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport {DragDropContext, Draggable, Droppable} from \"@hello-pangea/dnd\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {DragIndicator} from '@mui/icons-material';\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport {CircularProgress} from \"@mui/material\";\r\n\r\nconst api = new ApiCaller()\r\n\r\nconst EditItems = ({uList, updateList}) => {\r\n    const {loginDetails} = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setLoading('');\r\n    }, [uList]);\r\n    const handleDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n\r\n        const startIndex = result.source.index;\r\n        const endIndex = result.destination.index;\r\n        const copyList = [...uList.items];\r\n        const [reorderItem] = copyList.splice(startIndex, 1);\r\n        copyList.splice(endIndex, 0, reorderItem);\r\n        copyList.forEach((item, index) => {\r\n            item.itemOrder = index + 1;\r\n        });\r\n        uList.items = copyList;\r\n        updateList(uList);\r\n    };\r\n\r\n\r\n    const removeItem = async (item) => {\r\n        setLoading(item)\r\n        const updated = await api.sendDelete(\"list/item\", item, loginDetails)\r\n\r\n        updateList(updated);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                <DragDropContext onDragEnd={handleDragEnd}>\r\n                    <Droppable droppableId=\"items\">\r\n                        {(droppableProvider) => (\r\n                            <Box\r\n                                ref={droppableProvider.innerRef}\r\n                                {...droppableProvider.droppableProps}\r\n                            >\r\n                                {uList.items.map((item, index) => (\r\n                                    <Draggable\r\n                                        index={index}\r\n                                        key={item.id}\r\n                                        draggableId={item.id + \"\"}\r\n                                    >\r\n                                        {(draggableProvider) => (\r\n                                            <ListItem\r\n                                                ref={draggableProvider.innerRef}\r\n                                                {...draggableProvider.draggableProps}\r\n                                                {...draggableProvider.dragHandleProps}\r\n                                                sx={{\r\n                                                    cursor: 'pointer',\r\n                                                    border: '1px solid ',\r\n                                                    borderColor: 'primary.darker',\r\n                                                    marginTop: '5px',\r\n                                                    borderRadius: '5px',\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    justifyContent: 'space-between',\r\n\r\n                                                }}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Box>\r\n                                                        <DragIndicator/>\r\n                                                    </Box>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText primary={item.item}\r\n                                                              primaryTypographyProps={{fontSize: '18px'}}/>\r\n                                                {loading === item ? (<CircularProgress></CircularProgress>) : (<IconButton edge=\"end\" aria-label=\"delete\"\r\n                                                                                                                  onClick={() => removeItem(item)}>\r\n                                                    <ClearIcon/>\r\n                                                </IconButton>) }\r\n                                            </ListItem>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {droppableProvider.placeholder}\r\n                            </Box>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditItems;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button, CircularProgress,\r\n    TextField, Typography,\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nconst AddItem = ({uList, updateList}) => {\r\n    const [newItem, setItem] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [statusMissing, setStatusMissing] = useState(false);\r\n    const textRef = useRef();\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, [uList]);\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n\r\n        event.preventDefault();\r\n        if (uList.listInfo.type === \"LINK\" && status === \"\") {\r\n            setStatusMissing(true)\r\n            return;\r\n        } else {\r\n            setLoading(true);\r\n            addOne();\r\n        }\r\n\r\n    };\r\n\r\n    function addToList(i, updatedList) {\r\n        const newItemObj = {\r\n            listId: uList.listInfo.id,\r\n            item: i,\r\n            itemOrder: updatedList.items.length + 1,\r\n            itemStatus: status\r\n        };\r\n\r\n        return {\r\n            ...updatedList,\r\n            items: [...updatedList.items, newItemObj]\r\n        };\r\n    }\r\n\r\n    const addOne = () => {\r\n        if (newItem.trim() === '') return;\r\n\r\n        let updatedList = addToList(newItem, uList);\r\n        updateList(updatedList);\r\n\r\n        setItem('');\r\n        setStatus('');\r\n        setStatusMissing(false);\r\n        textRef.current.focus();\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <Box sx={{display: 'flex', alignItems: 'center', mt: 2}}>\r\n                    <Box sx={{flex: 1, display: 'flex', flexDirection: 'column'}}>\r\n                        <TextField\r\n                            inputProps={{maxLength: 200}}\r\n                            id=\"new-item\"\r\n                            label=\"Add to List\"\r\n                            variant=\"outlined\"\r\n                            value={newItem}\r\n                            onChange={(e) => setItem(e.target.value)}\r\n                            fullWidth\r\n                            sx={{height: '56px',}}\r\n                            inputRef={textRef}\r\n                            InputProps={{\r\n                                sx: {\r\n                                    borderTopRightRadius: 0,\r\n                                    borderBottomRightRadius: 0,\r\n                                    '& .MuiOutlinedInput-notchedOutline': {\r\n                                        borderTopRightRadius: 0,\r\n                                        borderBottomRightRadius: 0,\r\n                                    },\r\n                                    height: '56px',\r\n                                    borderColor: 'primary.darker',\r\n                                },\r\n                            }}\r\n                        />\r\n                        {uList.listInfo.type === \"LINK\" && (\r\n                            <TextField\r\n                                inputProps={{maxLength: 200}}\r\n                                id=\"new-item\"\r\n                                label=\"URL\"\r\n                                variant=\"outlined\"\r\n                                value={status}\r\n                                onChange={(e) => setStatus(e.target.value)}\r\n                                fullWidth\r\n                                sx={{height: '56px',}}\r\n                                inputRef={textRef}\r\n                                InputProps={{\r\n                                    sx: {\r\n                                        borderTopRightRadius: 0,\r\n                                        borderBottomRightRadius: 0,\r\n                                        '& .MuiOutlinedInput-notchedOutline': {\r\n                                            borderTopRightRadius: 0,\r\n                                            borderBottomRightRadius: 0,\r\n                                        },\r\n                                        height: '56px',\r\n                                        borderColor: 'primary.darker',\r\n                                    },\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                    {loading ? (<CircularProgress></CircularProgress>) : (<Button\r\n                        type={\"submit\"}\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                            borderTopLeftRadius: 0,\r\n                            borderBottomLeftRadius: 0,\r\n                            minWidth: '56px',\r\n                            height: uList.listInfo.type === 'LINK' ? '112px' : '56px'\r\n                        }}\r\n                    >\r\n                        <AddIcon/>\r\n                    </Button>)}\r\n\r\n                </Box>\r\n                {statusMissing && (<Typography color={\"warning\"}>Please enter a URL for your link</Typography>)}\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddItem;\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    FormControl, MenuItem, Select, TextField, Typography\r\n} from \"@mui/material\";\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nfunction PublicListSettings(props) {\r\n    return null;\r\n}\r\n\r\nPublicListSettings.propTypes = {};\r\nconst EditListDetails = ({list, updateCopy}) => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n    const handleTypeChange = (event) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                type: event.target.value,\r\n\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n\r\n    };\r\n\r\n    const updateTitle = (value) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                listName: value,\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const updateDesc = (value) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                listDesc: value,\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <TextField\r\n                inputProps={{maxLength: 100}}\r\n                id=\"list-title\"\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                value={list.listInfo.listName}\r\n                onChange={(e) => updateTitle(e.target.value)}\r\n                fullWidth\r\n                sx={{marginBottom: 1}}\r\n            />\r\n            <TextField\r\n                inputProps={{maxLength: 100}}\r\n                id=\"list-desc\"\r\n                label=\"Description (optional)\"\r\n                variant=\"outlined\"\r\n                value={list.listInfo.listDesc}\r\n                onChange={(e) => updateDesc(e.target.value)}\r\n                fullWidth\r\n                sx={{marginBottom: 1}}\r\n            />\r\n            <FormControl>\r\n                <Typography>List type:</Typography>\r\n                {list.listInfo.type===\"LINK\" ? (\r\n                    <Typography>Linked</Typography>\r\n                ):(\r\n                <Select\r\n                    value={list.listInfo.type}\r\n                    onChange={handleTypeChange}\r\n                    sx={{\r\n                        width: 200,\r\n                        marginBottom: 2,\r\n                    }}\r\n                >\r\n                    <MenuItem value={\"BASIC\"}>Normal</MenuItem>\r\n                    <MenuItem value={\"CHECK\"}>Checklist</MenuItem>\r\n                </Select>)}\r\n            </FormControl>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditListDetails;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {Box, Button, CircularProgress, Typography} from \"@mui/material\";\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport {BASE_URL_PUBLIC} from \"../constants\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst api = new ApiCaller()\r\nconst PublicListSettings = ({uList, updateList}) => {\r\n    const {loginDetails} = useContext(AuthContext);\r\n    const [isPublic, setPublic] = useState(false);\r\n    const [address, setAddress] = useState(\"\");\r\n    const [copied, setCopied] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const copyToClipboard = async () => {\r\n        try {\r\n            await navigator.clipboard.writeText(address);\r\n            setCopied(true);\r\n            setTimeout(() => setCopied(false), 2000);\r\n        } catch (err) {\r\n            console.error(\"Failed to copy text: \", err);\r\n        }\r\n    };\r\n\r\n    function createURL() {\r\n        if (uList.listInfo.uuid !== null) {\r\n            setAddress(BASE_URL_PUBLIC + uList.listInfo.uuid)\r\n        }\r\n        else{\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPublic(uList.listInfo.uuid !== null)\r\n        createURL();\r\n        setLoading(false)\r\n    }, [uList]);\r\n\r\n    const makePublic = async () => {\r\n        setLoading(true)\r\n        const updated = await api.sendPost(\"list/makePublic\", uList, loginDetails)\r\n        updateList(updated)\r\n    }\r\n    const makePrivate = async () => {\r\n        setLoading(true)\r\n        const updated = await api.sendPost(\"list/makePrivate\", uList, loginDetails)\r\n        updateList(updated)\r\n    }\r\n    const goToPublic = () => {\r\n        navigate(`/web/public/${uList.listInfo.uuid}`)\r\n    }\r\n    return (\r\n        <>\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                height=\"100%\"\r\n            >\r\n            {isPublic ? (\r\n                <>\r\n                    <Typography>List is <strong>Public</strong></Typography>\r\n                    <br />\r\n                    <Typography>Share the link with anyone to let them view your list.</Typography>\r\n                    <br />\r\n                    <Button sx={{m:1}} variant=\"outlined\" fullWidth onClick={copyToClipboard}>\r\n                        {copied ? \"Link Copied!\" : \"Copy Link\"}\r\n                    </Button>\r\n                    <Button sx={{m:1}} variant=\"outlined\" fullWidth onClick={goToPublic}>\r\n                        Go to Public List\r\n                    </Button>\r\n\r\n\r\n                    {loading ? (<CircularProgress></CircularProgress>):(<Button sx={{m:1}} variant=\"outlined\" fullWidth onClick={makePrivate}>\r\n                        Make private\r\n                    </Button>) }\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Typography>List is <strong>Private</strong>\r\n                    <br /> Only you and those you invite are able to access the list.</Typography><br />\r\n                    {loading ? (<CircularProgress></CircularProgress>):(<Button sx={{m:1}} variant=\"outlined\" fullWidth onClick={makePublic}>\r\n                    Make public\r\n                </Button>)}<br />\r\n                    <Typography>Make the list public to be able to share your list with anyone who has the link to\r\n                        it.</Typography>\r\n\r\n\r\n                </>\r\n            )}\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PublicListSettings;\r\n\r\n\r\n\r\n\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Accordion, AccordionDetails, AccordionSummary,\r\n    FormControl, MenuItem, Select, TextField, Typography,\r\n    IconButton, Box, Button\r\n} from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nconst apiCaller = new ApiCaller();\r\n\r\nfunction Spinner() {\r\n    return null;\r\n}\r\n\r\nconst HandleUsers = ({list, updateCopy}) => {\r\n    const {loginDetails} = useContext(AuthContext);\r\n    const [newUser, setNewUser] = useState(\"\");\r\n    const [newUserRole, setNewUserRole] = useState(\"VIEWER\");\r\n    const [userCheckLoading, setUserLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const editors = list.editors || [];\r\n    const viewers = list.viewers || [];\r\n\r\n    const handleRoleChange = (user, newRole) => {\r\n        let newEditors = [...editors];\r\n        let newViewers = [...viewers];\r\n\r\n        if (newRole === \"EDITOR\") {\r\n            newViewers = newViewers.filter(viewer => viewer !== user);\r\n            if (!newEditors.includes(user)) {\r\n                newEditors.push(user);\r\n            }\r\n        } else if (newRole === \"VIEWER\") {\r\n            newEditors = newEditors.filter(editor => editor !== user);\r\n            if (!newViewers.includes(user)) {\r\n                newViewers.push(user);\r\n            }\r\n        }\r\n\r\n        const newList = {\r\n            ...list,\r\n            editors: newEditors,\r\n            viewers: newViewers,\r\n        };\r\n\r\n        updateCopy(newList);\r\n    };\r\n\r\n\r\n    const handleRemoveUser = (user) => {\r\n        const newList = {\r\n            ...list,\r\n            editors: editors.filter((editor) => editor !== user),\r\n            viewers: viewers.filter((viewer) => viewer !== user),\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const addUser = async () => {\r\n        setUserLoading(true);\r\n        setErrorMessage(\"\");\r\n\r\n        try {\r\n            const result = await apiCaller.sendPost(\"user/userExists\", {username: newUser}, loginDetails);\r\n\r\n            if (result === true) {\r\n                const newList = {\r\n                    ...list,\r\n                    editors: newUserRole === \"EDITOR\" ? [...editors, newUser] : editors,\r\n                    viewers: newUserRole === \"VIEWER\" ? [...viewers, newUser] : viewers,\r\n                };\r\n                setNewUser(\"\");\r\n                setNewUserRole(\"VIEWER\");\r\n                updateCopy(newList);\r\n            } else {\r\n                setErrorMessage(\"The username does not exist.\");\r\n            }\r\n        } catch (e) {\r\n            setErrorMessage(\"An error occurred while checking the username.\");\r\n        } finally {\r\n            setUserLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleNewUserRoleChange = (event) => {\r\n        setNewUserRole(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n                    {editors.length > 0 || viewers.length > 0 ? (\r\n                        <>\r\n                            {editors.map((user, index) => (\r\n                                <Box key={index} sx={{display: \"flex\", alignItems: \"center\", marginBottom: 1}}>\r\n                                    <Typography sx={{flexGrow: 1, marginLeft: 2}}>{user}</Typography>\r\n                                    <FormControl sx={{width: 100, marginRight: 2}}>\r\n                                        <Select\r\n                                            value=\"EDITOR\"\r\n                                            onChange={(e) => handleRoleChange(user, e.target.value)}\r\n                                        >\r\n                                            <MenuItem value=\"EDITOR\">Editor</MenuItem>\r\n                                            <MenuItem value=\"VIEWER\">Viewer</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <IconButton onClick={() => handleRemoveUser(user)} color=\"error\">\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </Box>\r\n                            ))}\r\n                            {viewers.map((user, index) => (\r\n                                <Box key={index} sx={{display: \"flex\", alignItems: \"center\", marginBottom: 1}}>\r\n                                    <Typography sx={{flexGrow: 1, marginLeft: 2}}>{user}</Typography>\r\n                                    <FormControl sx={{width: 100, marginRight: 2}}>\r\n                                        <Select\r\n                                            value=\"VIEWER\"\r\n                                            onChange={(e) => handleRoleChange(user, e.target.value)}\r\n                                        >\r\n                                            <MenuItem value=\"EDITOR\">Editor</MenuItem>\r\n                                            <MenuItem value=\"VIEWER\">Viewer</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <IconButton onClick={() => handleRemoveUser(user)} color=\"error\">\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </Box>\r\n                            ))}\r\n                        </>\r\n                    ) : (\r\n                        <Typography sx={{marginLeft: 2}}>\r\n                            List is currently private.\r\n                        </Typography>\r\n                    )}\r\n<br />\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    id=\"panel-header\"\r\n                    aria-controls=\"panel-content\"\r\n\r\n                >\r\n                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                        <Typography fontSize={\"large\"}>Add User</Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <FormControl sx={{maxWidth: 350, marginBottom: 2}}>\r\n                        <TextField\r\n                            inputProps={{maxLength: 50}}\r\n                            id=\"new-item\"\r\n                            label=\"Username\"\r\n                            variant=\"outlined\"\r\n                            value={newUser}\r\n                            onChange={(e) => setNewUser(e.target.value)}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n                    <Box sx={{display: \"flex\", justifyContent: \"space-between\", width: \"100%\", maxWidth: 350}}>\r\n                        <FormControl sx={{width: \"48%\"}}>\r\n                            <Select\r\n                                value={newUserRole}\r\n                                onChange={handleNewUserRoleChange}\r\n                                inputProps={{\r\n                                    name: \"role\",\r\n                                    id: \"uncontrolled-native\",\r\n                                }}\r\n                                sx={{width: \"100%\"}}\r\n                            >\r\n                                <MenuItem value={\"VIEWER\"}>Viewer</MenuItem>\r\n                                <MenuItem value={\"EDITOR\"}>Editor</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        {userCheckLoading ? (\r\n                            <Spinner/>\r\n                        ) : (\r\n                            <Button onClick={addUser} variant={\"outlined\"} sx={{height: \"56px\", width: \"48%\"}}>\r\n                                Add User\r\n                            </Button>\r\n                        )}\r\n\r\n                    </Box>\r\n                    <br/>\r\n                    <Typography color={\"error\"}> {errorMessage}</Typography>\r\n</AccordionDetails>\r\n</Accordion>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HandleUsers;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\nconst ViewOnlyUsers = ({uList}) => {\r\n\r\n    return (\r\n        <>\r\n            <Box p={2}>\r\n                <Box sx={{display: 'flex'}}>\r\n                    <Typography fontSize={\"large\"} sx={{fontFamily: 'Garamond'}}\r\n                                minWidth={100}><strong>Owner: </strong></Typography>\r\n                    <Typography fontSize={\"large\"}>{uList.owner}</Typography>\r\n\r\n                </Box>\r\n                {!uList.editors || uList.editors.length !== 0 && (\r\n                    <Box sx={{display: 'flex'}} >\r\n                        <Typography fontSize={\"large\"} sx={{fontFamily: 'Garamond'}}\r\n                                    minWidth={100}><strong>Editors: </strong></Typography>\r\n                        <Box>\r\n                            {uList.editors.map((user) => (<Typography  key={user} fontSize={\"large\"}>{user}</Typography>))}\r\n                        </Box>\r\n                    </Box>\r\n\r\n                )}\r\n                {!uList.viewers || uList.viewers.length > 0 && (\r\n                    <Box sx={{display: 'flex'}}>\r\n                        <Typography fontSize={\"large\"} sx={{fontFamily: 'Garamond'}}\r\n                                    minWidth={100}><strong>Viewers: </strong></Typography>\r\n                        <Box>\r\n                            {uList.viewers.map((user) => (<Typography  key={user} fontSize={\"large\"}>{user}</Typography>))}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewOnlyUsers;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\n\r\nconst BulkAdd = ({ uList, updateList }) => {\r\n    const [bulkItems, setBulkItems] = useState('');\r\n    const [added, setAdded] = useState(0);\r\n    const textRef = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    function addToList(i, updatedList) {\r\n        const newItemObj = {\r\n            listId: uList.listInfo.id,\r\n            item: i,\r\n            itemOrder: updatedList.items.length + 1\r\n        };\r\n\r\n        return {\r\n            ...updatedList,\r\n            items: [...updatedList.items, newItemObj]\r\n        };\r\n    }\r\n\r\n    function bulkAdd() {\r\n        let updatedList = { ...uList };\r\n\r\n        const items = bulkItems.split(/\\r?\\n/);\r\n        let count = 0;\r\n        items.forEach(i => {\r\n            if (i.trim() !== '') {\r\n                updatedList = addToList(i, updatedList);\r\n                count++;\r\n            }\r\n        });\r\n\r\n        updateList(updatedList);\r\n        setBulkItems('');\r\n        setAdded(count);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n                    <Typography fontSize={\"small\"} sx={{ paddingBottom: 1 }}>\r\n                        Separate items by new line.\r\n                    </Typography>\r\n                    <TextField\r\n                        inputProps={{ maxLength: 200 }}\r\n                        id=\"bulk-add\"\r\n                        label=\"Bulk add\"\r\n                        variant=\"outlined\"\r\n                        value={bulkItems}\r\n                        onChange={(e) => setBulkItems(e.target.value)}\r\n                        fullWidth\r\n                        multiline\r\n                        minRows={3}\r\n                        InputProps={{\r\n                            sx: {\r\n                                height: '112px',\r\n                                borderColor: 'primary.darker',\r\n                            },\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        variant={\"outlined\"}\r\n                        p={1}\r\n                        fullWidth\r\n                        onClick={bulkAdd}>Add items</Button>\r\n            {added >0  && (<Typography> {added} items added to list.</Typography>)}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BulkAdd;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {\r\n    Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Dialog,\r\n} from '@mui/material';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport EditListDetails from \"./EditListDetails\";\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport PublicListSettings from \"./PublicListSettings\";\r\nimport HandleUsers from \"./HandleUsers\";\r\nimport ViewOnlyUsers from \"./ViewOnlyUsers\";\r\nimport BulkAdd from \"./BulkAdd\";\r\n\r\nconst apiCaller = new ApiCaller()\r\nconst ListDialog = ({uList, updateList, dialog, setDialog, option}) => {\r\n    const {loginDetails, user} = useContext(AuthContext);\r\n    const [listCopy, setCopy] = useState({...uList})\r\n    const [canSave, setCanSave] = useState(true)\r\n    const navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        const saveCheck = () => {\r\n            const saveOptions = [\"manageUsers\", \"editListInfo\",]\r\n            return saveOptions.includes(option);\r\n        }\r\n        setCanSave(saveCheck())\r\n    }, [option]);\r\n\r\n    function closeDialog() {\r\n        setDialog(false);\r\n    }\r\n\r\n    function deleteUsers() {\r\n        let deletedEditors = [];\r\n        let deletedViewers = [];\r\n        if (uList.editors !== listCopy.editors) {\r\n            deletedEditors = uList.editors.filter(editor => !listCopy.editors.includes(editor));\r\n        }\r\n        if (uList.viewers !== listCopy.viewers) {\r\n            deletedViewers = uList.viewers.filter(viewer => !listCopy.viewers.includes(viewer));\r\n        }\r\n        const deletedUsers = deletedEditors.concat(deletedViewers)\r\n        deletedUsers.forEach(user => {\r\n            apiCaller.sendPost(\"list/removeUser\", {user: user, listId: uList.listInfo.id}, loginDetails)\r\n        });\r\n    }\r\n\r\n    function saveAndClose() {\r\n        if (option === \"manageUsers\") {\r\n            deleteUsers();\r\n        }\r\n        updateList(listCopy)\r\n        setDialog(false);\r\n    }\r\n\r\n    function getOption() {\r\n        switch (option) {\r\n            case \"manageUsers\":\r\n                return <><HandleUsers list={listCopy} updateCopy={setCopy}></HandleUsers></>\r\n            case \"editListInfo\":\r\n                return <><EditListDetails list={listCopy} updateCopy={setCopy}></EditListDetails></>\r\n            case \"deleteList\":\r\n                return deleteDialog()\r\n            case \"leaveList\":\r\n                return leaveDialog()\r\n            case \"userInfo\":\r\n                return <><ViewOnlyUsers uList={listCopy}></ViewOnlyUsers></>\r\n            case \"bulkAdd\":\r\n                return <><BulkAdd uList={uList} updateList={updateList}></BulkAdd></>\r\n            case \"publicSettings\":\r\n                return <><PublicListSettings uList={uList} updateList={updateList}></PublicListSettings></>\r\n        }\r\n    }\r\n\r\n    function getTitle() {\r\n        switch (option) {\r\n            case \"manageUsers\":\r\n                return \"Manage Users\"\r\n            case \"editListInfo\":\r\n                return \"Edit Info\"\r\n            case \"deleteList\":\r\n                return \"Delete List\"\r\n            case \"leaveList\":\r\n                return \"Leave List\"\r\n            case \"userInfo\":\r\n                return \"Users\"\r\n            case \"bulkAdd\":\r\n                return \"Add Multiple Items\"\r\n            case \"publicSettings\":\r\n                return \"Public List Settings\"\r\n        }\r\n    }\r\n\r\n    function deleteDialog() {\r\n        return <><Typography textAlign={'center'} p={1}>Warning: <br/>Deleting a list cannot be\r\n            reversed.</Typography>\r\n            <Button onClick={deleteList} variant={\"contained\"} sx={{padding: 2}}\r\n                    color={\"warning\"} fullWidth>Delete list</Button></>\r\n    }\r\n\r\n    async function deleteList() {\r\n        await apiCaller.sendDelete(\"list\", uList.listInfo.id, loginDetails)\r\n        setDialog(false)\r\n        navigate(`/web/overview`);\r\n    }\r\n\r\n    function leaveDialog() {\r\n        return <> <Typography textAlign={'center'} p={1}>Warning: <br/>If you want to come back, the owner\r\n            will have to add you again.</Typography>\r\n            <Button onClick={leaveList} variant={\"contained\"} sx={{padding: 2}}\r\n                    color={\"warning\"} fullWidth>Leave list</Button></>\r\n    }\r\n\r\n    async function leaveList() {\r\n        await apiCaller.sendPost(\"list/removeUser\", {user: user.username, listId: uList.listInfo.id}, loginDetails)\r\n        setDialog(false)\r\n        navigate(`/web/overview`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialog}\r\n            >\r\n                <DialogTitle textAlign={'center'}>\r\n                    {getTitle()}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    {getOption()}\r\n\r\n                </DialogContent>\r\n                <DialogActions sx={{justifyContent: 'center'}}>\r\n                    <Button onClick={closeDialog} variant=\"contained\">\r\n                        Close\r\n                    </Button>\r\n\r\n                    {canSave && (<Button onClick={saveAndClose} variant=\"contained\">\r\n                        Save Changes\r\n                    </Button>)}\r\n\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListDialog;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { IconButton, Menu, MenuItem } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { AuthContext } from '../AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ListDialog from './ListDialog';\r\n\r\nconst ListOptions = ({ uList, updateList }) => {\r\n    const { user } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [isPublic, setIsPublic] = useState(false);\r\n    const [dialogOption, setDialogOption] = useState(null);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsPublic(uList.listInfo.uuid !== null);\r\n    }, [uList]);\r\n\r\n    const handleMenuClick = (event) => setAnchorEl(event.currentTarget);\r\n    const handleMenuClose = () => setAnchorEl(null);\r\n\r\n    const openDialog = (option) => {\r\n        setDialogOption(option);\r\n        setDialogOpen(true);\r\n        handleMenuClose();\r\n    };\r\n\r\n    const renderMenuItems = () => {\r\n        const commonItems = [\r\n            { text: 'User Information', action: () => openDialog('userInfo'), roles: ['viewers'] },\r\n            { text: 'Bulk Add Items', action: () => openDialog('bulkAdd'), roles: ['owner', 'editors'] },\r\n            { text: 'Edit List Information', action: () => openDialog('editListInfo'), roles: ['owner', 'editors'] },\r\n            { text: 'Go to Public Page', action: () => navigate(`/web/public/${uList.listInfo.uuid}`), roles: ['viewers', 'editors'], condition: isPublic },\r\n            { text: 'Leave List', action: () => openDialog('leaveList'), roles: ['viewers', 'editors'] },\r\n            { text: 'Handle Users', action: () => openDialog('manageUsers'), roles:['owner'] },\r\n            { text: 'Edit Public Settings', action: () => openDialog('publicSettings'), roles:['owner'] },\r\n            { text: 'Delete List', action: () => openDialog('deleteList'), roles: ['owner'] }\r\n        ];\r\n\r\n\r\n        const ownerItems = commonItems.filter(item => item.roles.includes('owner'));\r\n        const editorItems = commonItems.filter(item => item.roles.includes('editors'));\r\n        const viewerItems = commonItems.filter(item => item.roles.includes('viewers'));\r\n\r\n        if (uList.owner === user.username) {\r\n            return ownerItems;\r\n        } else if (uList.editors !== null && uList.editors.includes(user.username)) {\r\n            return editorItems;\r\n        } else if (uList.viewers !== null && uList.viewers.includes(user.username)) {\r\n            return viewerItems;\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                sx={{ position: 'sticky', top: 0, right: 0, color: 'primary.lighter', fontSize: 'large' }}\r\n                id=\"basic-button\"\r\n                aria-controls={Boolean(anchorEl) ? 'basic-menu' : undefined}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={Boolean(anchorEl) ? 'true' : undefined}\r\n                onClick={handleMenuClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n                MenuListProps={{ 'aria-labelledby': 'basic-button' }}\r\n            >\r\n                {renderMenuItems().map(({ text, action, condition = true }) =>\r\n                    condition && <MenuItem key={text} onClick={action}>{text}</MenuItem>\r\n                )}\r\n            </Menu>\r\n\r\n            <ListDialog\r\n                uList={uList}\r\n                updateList={updateList}\r\n                dialog={dialogOpen}\r\n                setDialog={setDialogOpen}\r\n                option={dialogOption}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListOptions;\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    IconButton,\r\n    Icon, DialogTitle, DialogContent, DialogActions, Button, Dialog, TextField,\r\n} from '@mui/material';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nconst LinkedList = ({uList, updateList}) => {\r\n    const {user} = useContext(AuthContext);\r\n    const [editRights, setEditRights] = useState(() => {\r\n        return user.username === uList.owner || uList.editors.includes(user.username);\r\n    });\r\n\r\n\r\n    const [dialog, setDialog] = useState(false)\r\n    const [selected, setSelected] = useState(\"\")\r\n    const [selectedURL, setSelectedURL] = useState(\"\")\r\n    const [copied, setCopied] = useState(false)\r\n\r\n    function openInNewTab(url) {\r\n        window.open(url, '_blank', 'noopener,noreferrer');\r\n    }\r\n\r\n    function openSettings(item) {\r\n        setSelected(item);\r\n        setSelectedURL(item.itemStatus)\r\n        setDialog(true)\r\n    }\r\n    function saveAndClose(){\r\n        const updatedItems = uList.items.map((item) =>\r\n            item.id === selected.id\r\n                ? { ...item, itemStatus: selectedURL }\r\n                : item\r\n        );\r\n        updateList({ ...uList, items: updatedItems });\r\n        setDialog(false);\r\n    }\r\n    const closeDialog = () =>{\r\n        setDialog(false)\r\n    }\r\n\r\n    const copyToClipboard = async () => {\r\n        try {\r\n            await navigator.clipboard.writeText(selectedURL);\r\n            setCopied(true);\r\n            setTimeout(() => setCopied(false), 2000);\r\n        } catch (err) {\r\n            console.error(\"Failed to copy text: \", err);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {uList.items.map((item) => (\r\n\r\n                    <ListItem\r\n                        key={item.id}\r\n                        sx={{\r\n                            cursor: 'pointer',\r\n                            border: '1px solid ',\r\n                            borderColor: 'primary.darker',\r\n                            marginTop: '5px',\r\n                            borderRadius: '5px',\r\n                        }}\r\n                    >\r\n                        <ListItemAvatar onClick={() => openInNewTab(item.itemStatus)}>\r\n                            <OpenInNewIcon></OpenInNewIcon>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={item.item}\r\n                            primaryTypographyProps={{fontSize: '18px'}}\r\n                            onClick={() => openInNewTab(item.itemStatus)}\r\n                        />\r\n                        <IconButton edge=\"end\" onClick={() => openSettings(item)}>\r\n                            <SettingsIcon></SettingsIcon>\r\n                        </IconButton>\r\n                    </ListItem>\r\n\r\n\r\n                ))}\r\n            </List>\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialog}\r\n            >\r\n                <DialogTitle textAlign={'center'}>\r\n                    Edit link\r\n                </DialogTitle>\r\n                <br />\r\n                <Button variant=\"outlined\" fullWidth onClick={copyToClipboard}>\r\n                    {copied ? \"Link Copied!\" : \"Copy Link\"}\r\n                </Button>               <DialogContent>\r\n                {editRights ? (<TextField label=\"Edit Link\"\r\n                                          value={selectedURL}\r\n                                          onChange={(e) => setSelectedURL(e.target.value)}\r\n                ></TextField>) : (\r\n                    <TextField label=\"Link\"\r\n                               value={selectedURL}\r\n                    ></TextField>\r\n                )}\r\n\r\n\r\n                </DialogContent>\r\n                <DialogActions sx={{justifyContent: 'center'}}>\r\n\r\n\r\n                    <Button onClick={() => {setDialog(false)}} variant=\"contained\">\r\n                        Close\r\n                    </Button>\r\n                    {editRights && (<Button onClick={() => {saveAndClose()}} variant=\"contained\">\r\n                        Save\r\n                    </Button>)}\r\n\r\n\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LinkedList;\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Box, IconButton\r\n} from '@mui/material';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\r\nimport CheckListDisplay from \"./CheckListDisplay\";\r\nimport BasicList from \"./BasicList\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport EditItems from \"./EditItems\";\r\nimport AddItem from \"./AddItem\";\r\nimport PageHeader from \"./PageHeader\";\r\nimport ListOptions from \"./ListOptions\";\r\nimport ListDesc from \"./ListDesc\";\r\nimport LinkedList from \"./LinkedList\";\r\n\r\n\r\nconst ListDisplay = ({uList, updateList}) => {\r\n    const {user} = useContext(AuthContext);\r\n    const [locked, setLocked] = useState(true);\r\n    const [editRights, setEditRights] = useState(() => {\r\n        return user.username === uList.owner || uList.editors.includes(user.username);\r\n    });\r\n\r\n    const toggleLocked = () => {\r\n        setLocked(!locked);\r\n    };\r\n\r\n    function getListType(type) {\r\n        switch (type.listInfo.type) {\r\n            case 'CHECK':\r\n                return <CheckListDisplay uList={uList} updateList={updateList}/>;\r\n            case \"LINK\":\r\n                return <LinkedList uList={uList} updateList={updateList}></LinkedList>;\r\n            default:\r\n                return <BasicList uList={uList}/>;\r\n        }\r\n    }\r\n\r\n    const users = () => {\r\n        if (uList.owner === user.username && uList.editors.length === 0 && uList.viewers.length === 0) {\r\n            return <></>\r\n        } else {\r\n            const editorsAndViewers = [...uList.editors, ...uList.viewers].join(\", \");\r\n            const allUsers = uList.owner + \", \" + editorsAndViewers\r\n\r\n            return (\r\n                <>\r\n                    <GroupIcon sx={{verticalAlign: 'middle', mr: 1}}/>\r\n                    {allUsers}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box maxWidth={750} sx={{mx: 'auto'}} variant=\"contained\">\r\n\r\n\r\n                <Box>\r\n\r\n                    <PageHeader title={uList.listInfo.listName}></PageHeader>\r\n\r\n                    <ListDesc uList={uList}></ListDesc>\r\n\r\n                    <Typography sx={{gridRow: '2', gridColumn: '1 / 3', textAlign: 'left', p: 1}}>\r\n                        {users()}\r\n                    </Typography>\r\n\r\n                </Box>\r\n                <Box sx={{\r\n                    border: '1px solid ',\r\n                    borderColor: 'primary.darker'\r\n                }}>\r\n                    <Box sx={{backgroundColor: \"primary.darker\", display: 'flex', justifyContent: 'flex-end',}}>\r\n                        {editRights && (\r\n                            <IconButton variant=\"outlined\" onClick={toggleLocked}>\r\n                                {locked ? <LockIcon sx={{color: 'primary.lighter'}}/> :\r\n                                    <LockOpenIcon sx={{color: 'primary.lighter'}}/>}\r\n                            </IconButton>\r\n                        )}\r\n                        <ListOptions uList={uList} updateList={updateList}></ListOptions>\r\n                    </Box>\r\n\r\n\r\n                    {locked ? (\r\n                        <Box>{getListType(uList)}</Box>\r\n                    ) : (\r\n                        <EditItems uList={uList} updateList={updateList}/>\r\n                    )}\r\n\r\n                    {editRights && (<AddItem uList={uList} updateList={updateList}></AddItem>)}\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListDisplay;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Box, CircularProgress, Typography } from '@mui/material';\r\nimport { AuthContext } from \"../AuthContext\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport { ApiCaller } from \"../ApiCaller\";\r\nimport ListDisplay from \"../components/ListDisplay\";\r\nimport { BASE_URL_SOCKET } from \"../constants\";\r\n\r\nconst apiCaller = new ApiCaller();\r\n\r\nconst ViewList = () => {\r\n    const { id } = useParams();\r\n    const { loginDetails } = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [uList, setList] = useState(null);\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [fetchError, setFetchError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchList = async () => {\r\n            try {\r\n                const data = await apiCaller.sendGet(`list/${id}`, loginDetails);\r\n                setList(data);\r\n            } catch (error) {\r\n                setFetchError(true);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchList();\r\n\r\n        const socket = new SockJS(BASE_URL_SOCKET);\r\n        const client = new Client({\r\n            webSocketFactory: () => socket,\r\n            onConnect: () => {\r\n                console.log('Connected to WebSocket');\r\n                client.subscribe(`/topic/list/${id}`, (message) => {\r\n                    const updatedList = JSON.parse(message.body);\r\n                    setList(updatedList);\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error('Broker reported error: ' + frame.headers['message']);\r\n                console.error('Additional details: ' + frame.body);\r\n            }\r\n        });\r\n\r\n        client.activate();\r\n        setStompClient(client);\r\n\r\n        return () => {\r\n            if (client && client.connected) {\r\n                client.deactivate();\r\n            }\r\n        };\r\n    }, [id, loginDetails]);\r\n\r\n    const updateList = (newList) => {\r\n\r\n        if (stompClient && stompClient.connected) {\r\n            stompClient.publish({\r\n                destination: `/app/list/${id}`,\r\n                body: JSON.stringify(newList)\r\n            });\r\n            console.log(\"Sent update to WebSocket\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <Box>\r\n                    <CircularProgress />\r\n                    <Typography>Loading List</Typography>\r\n                </Box>\r\n            ) : (\r\n                <>\r\n                    {fetchError ? (\r\n                        <Typography>Unable to load list.</Typography>\r\n                    ) : (\r\n                        <ListDisplay uList={uList} updateList={updateList} />\r\n                    )}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewList;\r\n"],"names":["ApiCaller","constructor","baseUrl","BASE_URL","sendPost","path","data","loginDetails","response","fetch","this","method","headers","body","JSON","stringify","ok","console","log","json","errorResponse","Error","sendPostNoLogin","sendGet","sendGetNoAuth","sendDelete","_ref","uList","_jsx","_Fragment","children","List","items","map","item","_jsxs","ListItem","sx","cursor","border","borderColor","marginTop","borderRadius","ListItemAvatar","Box","ListItemText","primary","primaryTypographyProps","fontSize","IconButton","edge","Icon","id","updateList","user","useContext","AuthContext","editRights","setEditRights","useState","username","owner","editors","includes","onClick","itemId","updatedItems","itemStatus","handleItemClick","status","CheckBoxIcon","color","CheckBoxOutlineBlankIcon","description","listInfo","listDesc","marginBottom","gridRow","gridColumn","m","paddingLeft","paddingRight","Typography","title","paddingTop","fontFamily","api","loading","setLoading","useEffect","DragDropContext","onDragEnd","result","destination","startIndex","source","index","endIndex","copyList","reorderItem","splice","forEach","itemOrder","Droppable","droppableId","droppableProvider","ref","innerRef","droppableProps","Draggable","draggableId","draggableProvider","draggableProps","dragHandleProps","display","alignItems","justifyContent","DragIndicator","CircularProgress","async","updated","removeItem","ClearIcon","placeholder","newItem","setItem","setStatus","statusMissing","setStatusMissing","textRef","useRef","addOne","trim","updatedList","i","newItemObj","listId","length","addToList","current","focus","onSubmit","event","preventDefault","type","mt","flex","flexDirection","TextField","inputProps","maxLength","label","variant","value","onChange","e","target","fullWidth","height","inputRef","InputProps","borderTopRightRadius","borderBottomRightRadius","Button","borderTopLeftRadius","borderBottomLeftRadius","minWidth","AddIcon","list","updateCopy","listName","newList","updateTitle","updateDesc","FormControl","Select","width","MenuItem","isPublic","setPublic","address","setAddress","copied","setCopied","navigate","useNavigate","uuid","BASE_URL_PUBLIC","createURL","navigator","clipboard","writeText","setTimeout","err","error","goToPublic","concat","apiCaller","Spinner","newUser","setNewUser","newUserRole","setNewUserRole","userCheckLoading","setUserLoading","errorMessage","setErrorMessage","viewers","handleRoleChange","newRole","newEditors","newViewers","filter","viewer","push","editor","handleRemoveUser","flexGrow","marginLeft","marginRight","DeleteIcon","Accordion","AccordionSummary","AccordionDetails","maxWidth","name","p","bulkItems","setBulkItems","added","setAdded","paddingBottom","multiline","minRows","split","count","dialog","setDialog","option","listCopy","setCopy","canSave","setCanSave","closeDialog","deleteList","leaveList","Dialog","open","onClose","DialogTitle","textAlign","getTitle","DialogContent","HandleUsers","EditListDetails","padding","ViewOnlyUsers","BulkAdd","PublicListSettings","getOption","DialogActions","deletedEditors","deletedViewers","deleteUsers","anchorEl","setAnchorEl","setIsPublic","dialogOption","setDialogOption","dialogOpen","setDialogOpen","handleMenuClose","openDialog","position","top","right","Boolean","undefined","currentTarget","MoreVertIcon","Menu","MenuListProps","renderMenuItems","commonItems","text","action","roles","condition","ownerItems","editorItems","viewerItems","_ref2","ListDialog","selected","setSelected","selectedURL","setSelectedURL","openInNewTab","url","window","OpenInNewIcon","openSettings","SettingsIcon","saveAndClose","locked","setLocked","mx","PageHeader","ListDesc","users","editorsAndViewers","join","allUsers","GroupIcon","verticalAlign","mr","backgroundColor","toggleLocked","LockIcon","LockOpenIcon","ListOptions","CheckListDisplay","LinkedList","BasicList","getListType","EditItems","AddItem","ViewList","useParams","setList","stompClient","setStompClient","fetchError","setFetchError","fetchList","socket","SockJS","BASE_URL_SOCKET","client","Client","webSocketFactory","onConnect","subscribe","message","parse","onStompError","frame","activate","connected","deactivate","ListDisplay","publish"],"sourceRoot":""}