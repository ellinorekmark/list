{"version":3,"file":"static/js/179.de1ef684.chunk.js","mappings":"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","sources":["ApiCaller.js","components/PageHeader.js","components/NewPassword.js","pages/Profile.js","../node_modules/@mui/icons-material/DarkMode.js","../node_modules/@mui/icons-material/LightMode.js"],"sourcesContent":["import {BASE_URL} from \"./constants\";\r\n\r\nexport class ApiCaller {\r\n\r\n\r\n    baseUrl = BASE_URL\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async sendPost(path, data, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            console.log(await response.json())\r\n            const errorResponse = await response.json()\r\n            throw new Error(errorResponse)\r\n        }\r\n        return  await response.json()\r\n    }\r\n    async sendPostNoLogin(path, data) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            const errorResponse = await response.json()\r\n            throw new Error(errorResponse)\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n\r\n    async sendGet(path, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json();\r\n    }\r\n    async sendGetNoAuth(path) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json();\r\n    }\r\n\r\n    async sendDelete(path, data, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json()\r\n    }\r\n\r\n\r\n}\r\n","import {Typography} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst PageHeader = ({title}) => {\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ paddingTop: 2, paddingRight:5, paddingLeft:5}}>\r\n                <Typography fontSize={\"xx-large\"} sx={{ fontFamily: 'Garamond', color:'primary.main'}}>\r\n                    <strong>{title}</strong>\r\n                </Typography>\r\n                <br />\r\n            </Box>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageHeader;\r\n\r\n\r\n\r\n","import Box from \"@mui/material/Box\";\r\nimport {Accordion, AccordionDetails, AccordionSummary, CircularProgress, TextField, Typography} from \"@mui/material\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst api = new ApiCaller()\r\n\r\nconst NewPassword = () => {\r\n    const {loginDetails, user, saveUser} = useContext(AuthContext);\r\n\r\n    const [oldPassword, setOld] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [repeat, setRepeat] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [misMatch, setMismatch] = useState(false)\r\n    const [pwMisMatch, setPwMismatch] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n\r\n\r\n\r\n    async function handleChangePassword() {\r\n        setLoading(true)\r\n        setPwMismatch(false)\r\n        setMismatch(false)\r\n        setError(false)\r\n        const control = btoa(user.username + ':' + oldPassword)\r\n        if (control !== loginDetails) {\r\n            setMismatch(true)\r\n        } else if (newPassword !== repeat) {\r\n            setPwMismatch(true)\r\n        } else {\r\n            try {\r\n                const newUser = await api.sendPost(\"user/newPassword\", {password: newPassword}, loginDetails)\r\n                saveUser(user.username, newPassword, newUser)\r\n                setSuccess(true)\r\n                setNewPassword(\"\")\r\n                setOld(\"\")\r\n                setRepeat(\"\")\r\n            } catch (e) {\r\n                setError(true)\r\n            }\r\n\r\n        }\r\n        setLoading(false)\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Box >\r\n                <Accordion sx={{\r\n                    mx: 'auto',\r\n                    mt: 2,\r\n                    border: '1px solid',\r\n                    borderColor: 'primary.darker',\r\n                    borderRadius: 2, }}>\r\n                    <AccordionSummary>\r\n                        <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                            <Typography >Change password</Typography>\r\n                        </Box>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        {success && (<Typography color={\"success\"}>Password has been changed.</Typography>)}\r\n\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"old-password\"\r\n                            label=\"Current Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={oldPassword}\r\n                            onChange={(e) => setOld(e.target.value)}\r\n                        />\r\n                        {misMatch && (<Typography color={\"error\"}>Old password is incorrect.</Typography>)}\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"new-password\"\r\n                            label=\"New Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"password-confirm\"\r\n                            label=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={repeat}\r\n                            onChange={(e) => setRepeat(e.target.value)}\r\n                        />\r\n                        {pwMisMatch && (<Typography color={\"error\"}>Passwords don't match.</Typography>)}\r\n\r\n                        {loading ? (\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mt: 4}}>\r\n                                <CircularProgress/>\r\n                            </Box>\r\n                        ) : (\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                sx={{mt: 1, p: 1}}\r\n                                onClick={handleChangePassword}\r\n                            >\r\n                                Change password\r\n                            </Button>\r\n                        )}\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n            </Box>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewPassword;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport Button from \"@mui/material/Button\";\r\nimport { AuthContext } from \"../AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Typography } from \"@mui/material\";\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport { ThemeContext } from \"../ThemeContext\";\r\nimport NewPassword from \"../components/NewPassword\";\r\n\r\nconst Profile = () => {\r\n    const { user, logout } = useContext(AuthContext);\r\n    const { theme, toggleTheme } = useContext(ThemeContext);\r\n    const [prettyDate, setPrettyDate] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const date = new Date(user.memberSince);\r\n\r\n    function formatDate() {\r\n        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPrettyDate(formatDate());\r\n\r\n    }, [theme, toggleTheme]);\r\n\r\n    const handleLogout = async () => {\r\n        logout();\r\n        navigate(`/`);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box maxWidth={300} sx={{ mx: 'auto' }}>\r\n                <Box sx={{ paddingTop: 2 }} >\r\n                    <PageHeader title={\"Profile\"}></PageHeader>\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        sx={{ mt: 1, p: 1 }}\r\n                        onClick={toggleTheme}\r\n                    >\r\n                        {theme === \"light\" ? (\r\n                            <DarkModeIcon sx={{ color: 'secondary.main' }} />\r\n                        ) : (\r\n                            <LightModeIcon sx={{ color: 'secondary.main' }} />\r\n                        )}\r\n                    </Button>\r\n\r\n                    <Box sx={{\r\n                        width: 300,\r\n                        mx: 'auto',\r\n                        mt: 2,\r\n                        border: '1px solid',\r\n                        borderColor: 'primary.darker',\r\n                        borderRadius: 2,\r\n                    }}>\r\n                        <Typography fontSize={\"large\"} sx={{ fontFamily: 'Garamond' }}>\r\n                            Username:\r\n                        </Typography>\r\n                        <Typography sx={{ marginBottom: 1 }}>\r\n                            {user.username}\r\n                        </Typography>\r\n                        <Typography fontSize={\"large\"} sx={{ fontFamily: 'Garamond' }}>\r\n                            Email:\r\n                        </Typography>\r\n                        <Typography sx={{ marginBottom: 1 }}>\r\n                            {user.email}\r\n                        </Typography>\r\n                        <Typography fontSize={\"large\"} sx={{ fontFamily: 'Garamond' }}>\r\n                            Member since:\r\n                        </Typography>\r\n                        <Typography sx={{ marginBottom: 1 }}>\r\n                            {prettyDate}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Box sx={{\r\n                    width: 300,\r\n                    mx: 'auto',\r\n                    mt: 2,\r\n                }}>\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                            mt: 1,\r\n                            p: 1\r\n                        }}\r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </Button><br /><br />\r\n\r\n                    <NewPassword></NewPassword>\r\n\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1\"\n}), 'DarkMode');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z\"\n}), 'LightMode');"],"names":["ApiCaller","constructor","baseUrl","BASE_URL","sendPost","path","data","loginDetails","response","fetch","this","method","headers","body","JSON","stringify","ok","console","log","json","errorResponse","Error","sendPostNoLogin","sendGet","sendGetNoAuth","sendDelete","_ref","title","_jsx","_Fragment","children","_jsxs","Box","sx","paddingTop","paddingRight","paddingLeft","Typography","fontSize","fontFamily","color","api","NewPassword","user","saveUser","useContext","AuthContext","oldPassword","setOld","useState","newPassword","setNewPassword","repeat","setRepeat","loading","setLoading","misMatch","setMismatch","pwMisMatch","setPwMismatch","error","setError","success","setSuccess","Accordion","mx","mt","border","borderColor","borderRadius","AccordionSummary","width","display","justifyContent","AccordionDetails","TextField","fullWidth","id","label","type","variant","margin","value","onChange","e","target","CircularProgress","Button","p","onClick","async","btoa","username","newUser","password","Profile","logout","theme","toggleTheme","ThemeContext","prettyDate","setPrettyDate","navigate","useNavigate","date","Date","memberSince","useEffect","toLocaleDateString","year","month","day","maxWidth","PageHeader","DarkModeIcon","LightModeIcon","marginBottom","email","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}