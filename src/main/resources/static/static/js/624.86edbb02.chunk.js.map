{"version":3,"file":"static/js/624.86edbb02.chunk.js","mappings":"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","sources":["ApiCaller.js","pages/Admin.js"],"sourcesContent":["import {BASE_URL} from \"./constants\";\r\n\r\nexport class ApiCaller {\r\n\r\n\r\n    baseUrl = BASE_URL\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async sendPost(path, data, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            console.log(await response.json())\r\n            const errorResponse = await response.json()\r\n            throw new Error(errorResponse)\r\n        }\r\n        return  await response.json()\r\n    }\r\n    async sendPostNoLogin(path, data) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            const errorResponse = await response.json()\r\n            throw new Error(errorResponse)\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n\r\n    async sendGet(path, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json();\r\n    }\r\n\r\n    async sendDelete(path, data, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json()\r\n    }\r\n\r\n\r\n}\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {CircularProgress, TextField, Typography} from \"@mui/material\";\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst apiCaller = new ApiCaller();\r\n\r\nconst Admin = () => {\r\n    const {user, loginDetails} = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const result = await apiCaller.sendGet(\"admin\", loginDetails)\r\n                setData(result)\r\n            } catch (e) {\r\n                setError(true)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        }\r\n\r\n        getData()\r\n\r\n\r\n    }, [])\r\n\r\n    const handleReset = async () => {\r\n        setLoading(true)\r\n        try{\r\n            await apiCaller.sendPost(\"admin/resetPassword\", {\"username\": username, \"password\" : password}, loginDetails)\r\n        }\r\n        catch(e){\r\n            console.log(\"failed. \", e)\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Typography fontSize={\"xx-large\"} sx={{fontFamily: 'Garamond'}}>Admin page</Typography>\r\n            <Box maxWidth={300} sx={{mx: 'auto'}}>\r\n\r\n                {loading ? (\r\n                    <CircularProgress/>\r\n                ) : (\r\n                    <Box  sx={{\r\n                        width: 300,\r\n                        mx: 'auto',\r\n                        mt: 4,\r\n                        paddingTop: 1,\r\n                        paddingBottom: 1,\r\n                        border: '1px solid #ccc',\r\n                        borderRadius: 2,\r\n                        boxShadow: 2,\r\n                    }}>\r\n                        <Typography>Users : {data.users}</Typography>\r\n                        <Typography>Lists : {data.lists}</Typography>\r\n                        <Typography>Items : {data.items}</Typography>\r\n                        <Typography>Shared lists : {data.sharedLists}</Typography>\r\n                    </Box>\r\n                )}\r\n\r\n            </Box>\r\n            <Box maxWidth={300} sx={{mx: 'auto'}}>\r\n                <Typography>Reset user password</Typography>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {loading ? (\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 4}}>\r\n                        <CircularProgress/>\r\n                    </Box>\r\n                ) : (\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        sx={{mt: 1, p: 1}}\r\n                        onClick={handleReset}\r\n                    >\r\n                        Change password\r\n                    </Button>\r\n                )}\r\n            </Box>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n"],"names":["ApiCaller","constructor","baseUrl","BASE_URL","sendPost","path","data","loginDetails","response","fetch","this","method","headers","body","JSON","stringify","ok","console","log","json","errorResponse","Error","sendPostNoLogin","sendGet","sendDelete","apiCaller","Admin","user","useContext","AuthContext","loading","setLoading","useState","setData","error","setError","username","setUsername","password","setPassword","useEffect","async","result","e","getData","_jsxs","_Fragment","children","_jsx","Typography","fontSize","sx","fontFamily","Box","maxWidth","mx","CircularProgress","width","mt","paddingTop","paddingBottom","border","borderRadius","boxShadow","users","lists","items","sharedLists","TextField","fullWidth","id","label","variant","value","onChange","target","type","margin","display","justifyContent","Button","p","onClick"],"sourceRoot":""}