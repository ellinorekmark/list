{"version":3,"file":"static/js/936.5704f08b.chunk.js","mappings":"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","sources":["pages/Home.js"],"sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    CircularProgress,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {ApiCaller} from \"../ApiCaller\";\r\n\r\nconst apiCaller = new ApiCaller();\r\n\r\n\r\nconst Home = () => {\r\n    const {login, createAccount} = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [nameTaken, setNameTaken] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async () => {\r\n        setLoading(true);\r\n        if (await login(username, password) === true) {\r\n            navigate(`/overview`);\r\n        } else {\r\n            setLoading(false);\r\n            alert(\"Unable to log in\");\r\n        }\r\n    };\r\n\r\n    const handleCreateAccount = async () => {\r\n        setLoading(true);\r\n        const usernameExists = await apiCaller.sendPostNoLogin(\"user/userExists\", {username: newUsername});\r\n\r\n        if (!usernameExists) {\r\n            let account = await createAccount({\r\n                username: newUsername,\r\n                email,\r\n                password: newPassword,\r\n                passwordConfirm,\r\n                memberSince: \"\"\r\n            });\r\n            if (account === true) {\r\n                console.log(\"account created\")\r\n                navigate(`/overview`);\r\n            } else {\r\n                setLoading(false);\r\n                alert(\"Unable to create account\");\r\n            }\r\n        } else {\r\n            setNameTaken(true);\r\n            setLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [newUsername, setNewUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <Typography fontSize={\"xx-large\"} sx={{fontFamily: 'Garamond'}}>\r\n                Listig\r\n            </Typography>\r\n\r\n            <Box sx={{\r\n                width: 300,\r\n                mx: 'auto',\r\n                mt: 4,\r\n                p: 2,\r\n                border: '1px solid #ccc',\r\n                borderRadius: 2,\r\n                boxShadow: 2,\r\n            }}>\r\n                <Accordion>\r\n                    <AccordionSummary sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                            <h2>Login</h2>\r\n                        </Box>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            variant=\"outlined\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        {loading ? (\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mt: 4}}>\r\n                                <CircularProgress/>\r\n                            </Box>\r\n                        ) : (\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                sx={{mt: 1, p: 1}}\r\n                                onClick={handleLogin}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        )}\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Box>\r\n\r\n\r\n            <Box sx={{\r\n                width: 300,\r\n                mx: 'auto',\r\n                mt: 4,\r\n                p: 2,\r\n                border: '1px solid #ccc',\r\n                borderRadius: 2,\r\n                boxShadow: 2,\r\n            }}>\r\n                <Accordion>\r\n                    <AccordionSummary sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                            <h2>Create Account</h2>\r\n                        </Box>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"new-username\"\r\n                            label=\"Username\"\r\n                            variant=\"outlined\"\r\n                            value={newUsername}\r\n                            onChange={(e) => setNewUsername(e.target.value)}\r\n                        />\r\n                        {nameTaken && (<Typography color={\"error\"}>Username unavailable.</Typography>)}\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"new-password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"password-confirm\"\r\n                            label=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={passwordConfirm}\r\n                            onChange={(e) => setPasswordConfirm(e.target.value)}\r\n                        />\r\n\r\n\r\n                        {loading ? (\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mt: 4}}>\r\n                                <CircularProgress/>\r\n                            </Box>\r\n                        ) : (\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                sx={{mt: 1, p: 1}}\r\n                                onClick={handleCreateAccount}\r\n                            >\r\n                                Create Account\r\n                            </Button>\r\n                        )}\r\n\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["apiCaller","ApiCaller","Home","login","createAccount","useContext","AuthContext","loading","setLoading","useState","nameTaken","setNameTaken","navigate","useNavigate","username","setUsername","password","setPassword","newUsername","setNewUsername","email","setEmail","newPassword","setNewPassword","passwordConfirm","setPasswordConfirm","_jsxs","_Fragment","children","_jsx","Typography","fontSize","sx","fontFamily","Box","width","mx","mt","p","border","borderRadius","boxShadow","Accordion","AccordionSummary","display","justifyContent","textAlign","AccordionDetails","TextField","fullWidth","id","label","variant","value","onChange","e","target","type","margin","CircularProgress","Button","onClick","async","alert","color","sendPostNoLogin","memberSince","console","log"],"sourceRoot":""}