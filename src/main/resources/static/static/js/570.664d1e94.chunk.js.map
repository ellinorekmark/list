{"version":3,"file":"static/js/570.664d1e94.chunk.js","mappings":"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","sources":["ApiCaller.js","components/PageHeader.js","components/HandleUsers.js","components/ViewOnlyUsers.js","components/EditListDetails.js","components/EditDialog.js","components/CheckListDisplay.js","components/BasicList.js","components/EditItems.js","components/AddItem.js","components/ViewerOptions.js","components/ListDisplay.js","pages/ViewList.js"],"sourcesContent":["import {BASE_URL} from \"./constants\";\r\n\r\nexport class ApiCaller {\r\n\r\n\r\n    baseUrl = BASE_URL\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async sendPost(path, data, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            console.log(await response.json())\r\n            const errorResponse = await response.json()\r\n            throw new Error(errorResponse)\r\n        }\r\n        return  await response.json()\r\n    }\r\n    async sendPostNoLogin(path, data) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            const errorResponse = await response.json()\r\n            throw new Error(errorResponse)\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n\r\n    async sendGet(path, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            }\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json();\r\n    }\r\n\r\n    async sendDelete(path, data, loginDetails) {\r\n        const response = await fetch(this.baseUrl + path, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + loginDetails\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(await response.json())\r\n        }\r\n        return await response.json()\r\n    }\r\n\r\n\r\n}\r\n","import {Typography} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst PageHeader = ({title}) => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <Box sx={{ paddingTop: 2 }}>\r\n                <Typography fontSize={\"xx-large\"} sx={{ fontFamily: 'Garamond', color:'primary.main'}}>\r\n                    <strong>{title}</strong>\r\n                </Typography>\r\n                <br />\r\n            </Box>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageHeader;\r\n\r\n\r\n\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Accordion, AccordionDetails, AccordionSummary,\r\n    FormControl, MenuItem, Select, TextField, Typography,\r\n    IconButton, Box, Button\r\n} from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nconst apiCaller = new ApiCaller();\r\n\r\nfunction Spinner() {\r\n    return null;\r\n}\r\n\r\nconst HandleUsers = ({list, updateCopy}) => {\r\n    const {loginDetails} = useContext(AuthContext);\r\n    const [newUser, setNewUser] = useState(\"\");\r\n    const [newUserRole, setNewUserRole] = useState(\"VIEWER\");\r\n    const [userCheckLoading, setUserLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const editors = list.editors || [];\r\n    const viewers = list.viewers || [];\r\n\r\n    const handleRoleChange = (user, newRole) => {\r\n        const newList = {\r\n            ...list,\r\n            editors: newRole === \"EDITOR\"\r\n                ? [...editors, user].filter(u => !viewers.includes(u))\r\n                : editors.filter((editor) => editor !== user),\r\n            viewers: newRole === \"VIEWER\"\r\n                ? [...viewers, user].filter(u => !editors.includes(u))\r\n                : viewers.filter((viewer) => viewer !== user),\r\n        };\r\n        console.log(\"updating users in HandleUsers, \", JSON.stringify(newList));\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const handleRemoveUser = (user) => {\r\n        const newList = {\r\n            ...list,\r\n            editors: editors.filter((editor) => editor !== user),\r\n            viewers: viewers.filter((viewer) => viewer !== user),\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const addUser = async () => {\r\n        setUserLoading(true);\r\n        setErrorMessage(\"\");\r\n\r\n        try {\r\n            const result = await apiCaller.sendPost(\"user/userExists\", {username: newUser}, loginDetails);\r\n\r\n            if (result === true) {\r\n                const newList = {\r\n                    ...list,\r\n                    editors: newUserRole === \"EDITOR\" ? [...editors, newUser] : editors,\r\n                    viewers: newUserRole === \"VIEWER\" ? [...viewers, newUser] : viewers,\r\n                };\r\n                setNewUser(\"\");\r\n                setNewUserRole(\"VIEWER\");\r\n                updateCopy(newList);\r\n            } else {\r\n                setErrorMessage(\"The username does not exist.\");\r\n            }\r\n        } catch (e) {\r\n            setErrorMessage(\"An error occurred while checking the username.\");\r\n        } finally {\r\n            setUserLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleNewUserRoleChange = (event) => {\r\n        setNewUserRole(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    id=\"panel-header\"\r\n                    aria-controls=\"panel-content\"\r\n                    sx={{backgroundColor: \"primary.main\"}}\r\n                >\r\n                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                        <Typography p={1} fontSize={\"large\"}>Users</Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <br/>\r\n                    {editors.length > 0 || viewers.length > 0 ? (\r\n                        <>\r\n                            {editors.map((user, index) => (\r\n                                <Box key={index} sx={{display: \"flex\", alignItems: \"center\", marginBottom: 1}}>\r\n                                    <Typography sx={{flexGrow: 1, marginLeft: 2}}>{user}</Typography>\r\n                                    <FormControl sx={{width: 100, marginRight: 2}}>\r\n                                        <Select\r\n                                            value=\"EDITOR\"\r\n                                            onChange={(e) => handleRoleChange(user, e.target.value)}\r\n                                        >\r\n                                            <MenuItem value=\"EDITOR\">Editor</MenuItem>\r\n                                            <MenuItem value=\"VIEWER\">Viewer</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <IconButton onClick={() => handleRemoveUser(user)} color=\"error\">\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </Box>\r\n                            ))}\r\n                            {viewers.map((user, index) => (\r\n                                <Box key={index} sx={{display: \"flex\", alignItems: \"center\", marginBottom: 1}}>\r\n                                    <Typography sx={{flexGrow: 1, marginLeft: 2}}>{user}</Typography>\r\n                                    <FormControl sx={{width: 100, marginRight: 2}}>\r\n                                        <Select\r\n                                            value=\"VIEWER\"\r\n                                            onChange={(e) => handleRoleChange(user, e.target.value)}\r\n                                        >\r\n                                            <MenuItem value=\"EDITOR\">Editor</MenuItem>\r\n                                            <MenuItem value=\"VIEWER\">Viewer</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <IconButton onClick={() => handleRemoveUser(user)} color=\"error\">\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </Box>\r\n                            ))}\r\n                        </>\r\n                    ) : (\r\n                        <Typography sx={{marginLeft: 2}}>\r\n                            No users, only you have access to this list.\r\n                        </Typography>\r\n                    )}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    id=\"panel-header\"\r\n                    aria-controls=\"panel-content\"\r\n                    sx={{backgroundColor: \"primary.main\"}}\r\n                >\r\n                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                        <Typography p={1} fontSize={\"large\"}>Add User</Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails sx={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                    <FormControl sx={{maxWidth: 350, marginBottom: 2}}>\r\n                        <TextField\r\n                            inputProps={{maxLength: 50}}\r\n                            id=\"new-item\"\r\n                            label=\"Username\"\r\n                            variant=\"outlined\"\r\n                            value={newUser}\r\n                            onChange={(e) => setNewUser(e.target.value)}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n                    <Box sx={{display: \"flex\", justifyContent: \"space-between\", width: \"100%\", maxWidth: 350}}>\r\n                        <FormControl sx={{width: \"48%\"}}>\r\n                            <Select\r\n                                defaultValue={\"VIEWER\"}\r\n                                onChange={handleNewUserRoleChange}\r\n                                inputProps={{\r\n                                    name: \"role\",\r\n                                    id: \"uncontrolled-native\",\r\n                                }}\r\n                                sx={{width: \"100%\"}}\r\n                            >\r\n                                <option value={\"VIEWER\"}>Viewer</option>\r\n                                <option value={\"EDITOR\"}>Editor</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                        {userCheckLoading ? (\r\n                            <Spinner/>\r\n                        ) : (\r\n                            <Button onClick={addUser} variant={\"outlined\"} sx={{height: \"56px\", width: \"48%\"}}>\r\n                                Add User\r\n                            </Button>\r\n                        )}\r\n\r\n                    </Box>\r\n                    <br/>\r\n                    <Typography  color={\"error\"}> {errorMessage}</Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HandleUsers;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\nconst ViewOnlyUsers = ({uList}) => {\r\n\r\n    return (\r\n        <>\r\n            <Box p={2}>\r\n                <Box sx={{display: 'flex'}}>\r\n                    <Typography fontSize={\"large\"} sx={{fontFamily: 'Garamond'}}\r\n                                minWidth={100}><strong>Owner: </strong></Typography>\r\n                    <Typography fontSize={\"large\"}>{uList.owner}</Typography>\r\n\r\n                </Box>\r\n                {!uList.editors || uList.editors.length !== 0 && (\r\n                    <Box sx={{display: 'flex'}} >\r\n                        <Typography fontSize={\"large\"} sx={{fontFamily: 'Garamond'}}\r\n                                    minWidth={100}><strong>Editors: </strong></Typography>\r\n                        <Box>\r\n                            {uList.editors.map((user) => (<Typography  key={user} fontSize={\"large\"}>{user}</Typography>))}\r\n                        </Box>\r\n                    </Box>\r\n\r\n                )}\r\n                {!uList.viewers || uList.viewers.length > 0 && (\r\n                    <Box sx={{display: 'flex'}}>\r\n                        <Typography fontSize={\"large\"} sx={{fontFamily: 'Garamond'}}\r\n                                    minWidth={100}><strong>Viewers: </strong></Typography>\r\n                        <Box>\r\n                            {uList.viewers.map((user) => (<Typography  key={user} fontSize={\"large\"}>{user}</Typography>))}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewOnlyUsers;\r\n\r\n","import React, {useContext} from 'react';\r\nimport {\r\n    Accordion, AccordionDetails, AccordionSummary, Box,\r\n    FormControl, MenuItem, Select, TextField, Typography\r\n} from \"@mui/material\";\r\nimport HandleUsers from \"./HandleUsers\";\r\nimport ViewOnlyUsers from \"./ViewOnlyUsers\";\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nconst EditListDetails = ({list, updateCopy}) => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n    const handleTypeChange = (event) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                type: event.target.value,\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const updateTitle = (value) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                listName: value,\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    const updateDesc = (value) => {\r\n        const newList = {\r\n            ...list,\r\n            listInfo: {\r\n                ...list.listInfo,\r\n                listDesc: value,\r\n            },\r\n        };\r\n        updateCopy(newList);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    id=\"panel-header\"\r\n                    aria-controls=\"panel-content\"\r\n                    sx={{backgroundColor: \"primary.main\"}}\r\n                >\r\n                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                        <Typography p={1} fontSize={\"large\"}>List Details</Typography>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <br/>\r\n                    <TextField\r\n                        inputProps={{maxLength: 100}}\r\n                        id=\"list-title\"\r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n                        value={list.listInfo.listName}\r\n                        onChange={(e) => updateTitle(e.target.value)}\r\n                        fullWidth\r\n                        sx={{marginBottom: 1}}\r\n                    />\r\n                    <TextField\r\n                        inputProps={{maxLength: 100}}\r\n                        id=\"list-desc\"\r\n                        label=\"Description (optional)\"\r\n                        variant=\"outlined\"\r\n                        value={list.listInfo.listDesc}\r\n                        onChange={(e) => updateDesc(e.target.value)}\r\n                        fullWidth\r\n                        sx={{marginBottom: 1}}\r\n                    />\r\n                    <FormControl>\r\n                        <Typography>List type:</Typography>\r\n                        <Select\r\n                            value={list.listInfo.type}\r\n                            onChange={handleTypeChange}\r\n                            sx={{\r\n                                width: 200,\r\n                                marginBottom: 2,\r\n                            }}\r\n                        >\r\n                            <MenuItem value={\"BASIC\"}>Normal</MenuItem>\r\n                            <MenuItem value={\"CHECK\"}>Checklist</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            {list.owner === user.username ? (<HandleUsers list={list} updateCopy={updateCopy}/>) : (\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        id=\"panel-header\"\r\n                        aria-controls=\"panel-content\"\r\n                        sx={{backgroundColor: \"primary.main\"}}\r\n                    >\r\n                        <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                            <Typography p={1} fontSize={\"large\"}>Users</Typography>\r\n                        </Box>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <ViewOnlyUsers uList={list}></ViewOnlyUsers>\r\n                    </AccordionDetails>\r\n                </Accordion>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditListDetails;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {\r\n    Box,\r\n    IconButton,\r\n    Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Dialog,\r\n    AccordionSummary,\r\n    Accordion,\r\n    AccordionDetails\r\n} from '@mui/material';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport EditListDetails from \"./EditListDetails\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport PageHeader from \"./PageHeader\";\r\n\r\nconst apiCaller = new ApiCaller()\r\nconst EditDialog = ({uList, updateList}) => {\r\n    const {loginDetails, user} = useContext(AuthContext);\r\n    const [dialog, setDialog] = useState(false);\r\n    const [listCopy, setCopy] = useState({...uList})\r\n    const [isOwner, setIsOwner] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setIsOwner(ownsList)\r\n    }, [user]);\r\n\r\n    function openDialog() {\r\n        setDialog(true);\r\n    }\r\n\r\n    function closeDialog() {\r\n        setDialog(false);\r\n    }\r\n\r\n    function ownsList() {\r\n        return uList.owner === user.username;\r\n    }\r\n\r\n\r\n    function saveAndClose() {\r\n        let deletedEditors = [];\r\n        let deletedViewers = [];\r\n\r\n        if (uList.editors !== listCopy.editors) {\r\n            deletedEditors = uList.editors.filter(editor => !listCopy.editors.includes(editor));\r\n        }\r\n\r\n        if (uList.viewers !== listCopy.viewers) {\r\n            deletedViewers = uList.viewers.filter(viewer => !listCopy.viewers.includes(viewer));\r\n        }\r\n\r\n        const deletedUsers = deletedEditors.concat(deletedViewers)\r\n\r\n        deletedUsers.forEach(user => {\r\n            apiCaller.sendPost(\"list/removeUser\", {user: user, listId: uList.listInfo.id}, loginDetails)\r\n        });\r\n        console.log(\"This is the updated, copy:\", JSON.stringify(listCopy))\r\n        updateList(listCopy)\r\n        setDialog(false);\r\n    }\r\n\r\n    async function deleteList() {\r\n        await apiCaller.sendDelete(\"list\", uList.listInfo.id, loginDetails)\r\n        setDialog(false)\r\n        navigate(`/web/overview`);\r\n    }\r\n\r\n    function updateCopy(newCopy) {\r\n        setCopy(newCopy)\r\n    }\r\n    async function leaveList() {\r\n        await apiCaller.sendPost(\"list/removeUser\", {user: user.username, listId: uList.listInfo.id}, loginDetails)\r\n        setDialog(false)\r\n        navigate(`/web/overview`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IconButton variant=\"outlined\" onClick={openDialog} sx={{color: 'secondary.main'}}>\r\n                <EditIcon />\r\n            </IconButton>\r\n\r\n            <Dialog\r\n                fullScreen\r\n                open={dialog}\r\n                onClose={closeDialog}\r\n            >\r\n                <DialogTitle textAlign={'center'}>\r\n                    <PageHeader title={\"Edit List\"}></PageHeader>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Box maxWidth={400} sx={{\r\n                        mx: 'auto',\r\n                        cursor: 'pointer',\r\n                        border: '1px solid ',\r\n                        borderColor: 'primary.darker',\r\n                        marginTop: '5px',\r\n                        borderRadius: '5px',\r\n                    }} variant=\"contained\">\r\n\r\n                        <EditListDetails list={listCopy} updateCopy={updateCopy}></EditListDetails>\r\n                        {isOwner ? (\r\n                            <Accordion>\r\n                                <AccordionSummary id=\"panel-header\" aria-controls=\"panel-content\"\r\n                                                  sx={{backgroundColor: \"primary.main\"}} >\r\n                                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                                        <Typography p={1} fontSize={\"large\"}>Delete list</Typography>\r\n                                    </Box>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails sx={{justifyContent: 'center'}}>\r\n                                    <Typography textAlign={'center'} p={1}>Warning: <br/>Deleting a list cannot be\r\n                                        reversed.</Typography>\r\n                                    <Button onClick={deleteList} variant={\"contained\"} sx={{padding: 2}}\r\n                                            color={\"warning\"} fullWidth >Delete list</Button>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        ): (\r\n                            <Accordion>\r\n                                <AccordionSummary id=\"panel-header\" aria-controls=\"panel-content\"\r\n                                                  sx={{backgroundColor: \"primary.darker\"}}>\r\n                                    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                                        <Typography p={1} fontSize={\"large\"}>Leave</Typography>\r\n                                    </Box>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails sx={{justifyContent: 'center'}}>\r\n                                    <Typography textAlign={'center'} p={1}>Warning: <br/>If you want to come back, the owner\r\n                                        will have to add you again.</Typography>\r\n                                    <Button onClick={leaveList} variant={\"contained\"} sx={{padding: 2}}\r\n                                            color={\"warning\"} fullWidth>Leave list</Button>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        )}\r\n\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions sx={{justifyContent: 'center'}}>\r\n                    <Button onClick={closeDialog} variant=\"contained\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={saveAndClose} variant=\"contained\">\r\n                        Save Changes\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditDialog;\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    IconButton,\r\n    Icon\r\n} from '@mui/material';\r\n\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nconst CheckListDisplay = ({ uList, updateList }) => {\r\n    const {user} = useContext(AuthContext);\r\n    const [editRights, setEditRights] = useState(() => {\r\n        return user.username === uList.owner || uList.editors.includes(user.username);\r\n    });\r\n\r\n    function getCheckStatus(status) {\r\n        switch (status) {\r\n            case '1':\r\n                return <CheckBoxIcon sx={{color:'secondary.main'}}/>;\r\n            default:\r\n                return <CheckBoxOutlineBlankIcon sx={{color:'secondary.main'}} />;\r\n        }\r\n    }\r\n\r\n    const handleItemClick = (itemId) => {\r\n        if(editRights){\r\n            const updatedItems = uList.items.map((item) =>\r\n                item.id === itemId\r\n                    ? { ...item, itemStatus: item.itemStatus === '1' ? '' : '1' }\r\n                    : item\r\n            );\r\n            updateList({ ...uList, items: updatedItems });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {uList.items.map((item) => (\r\n                    <ListItem\r\n                        key={item.id}\r\n                        sx={{\r\n                            cursor: 'pointer',\r\n                            border: '1px solid ',\r\n                            borderColor: 'primary.darker',\r\n                            marginTop: '5px',\r\n                            borderRadius: '5px',\r\n                        }}\r\n                        onClick={() => handleItemClick(item.id)}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Box>\r\n                                {getCheckStatus(item.itemStatus)}\r\n                            </Box>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={item.item}\r\n                            primaryTypographyProps={{ fontSize: '18px' }}\r\n                        />\r\n                        <IconButton edge=\"end\" >\r\n                            <Icon></Icon>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckListDisplay;\r\n","import React from 'react';\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    IconButton,\r\n    Icon\r\n} from '@mui/material';\r\n\r\nconst BasicList = ({uList}) => {\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {uList.items.map((item) => (\r\n                    <ListItem\r\n                        key={item.id}\r\n                        sx={{\r\n                            cursor: 'pointer',\r\n                            border: '1px solid ',\r\n                            borderColor: 'primary.darker',\r\n                            marginTop: '5px',\r\n                            borderRadius: '5px',\r\n                        }}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Box>\r\n                            </Box>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={item.item}\r\n                            primaryTypographyProps={{fontSize: '18px'}}\r\n                        />\r\n                        <IconButton edge=\"end\">\r\n                            <Icon></Icon>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicList;\r\n","import React, {useContext} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport {DragDropContext, Draggable, Droppable} from \"@hello-pangea/dnd\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {DragIndicator} from '@mui/icons-material';\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\n\r\nconst api = new ApiCaller()\r\n\r\nconst EditItems = ({uList, updateList}) => {\r\n    const {loginDetails} = useContext(AuthContext);\r\n\r\n\r\n    const handleDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n\r\n        const startIndex = result.source.index;\r\n        const endIndex = result.destination.index;\r\n        const copyList = [...uList.items];\r\n        const [reorderItem] = copyList.splice(startIndex, 1);\r\n        copyList.splice(endIndex, 0, reorderItem);\r\n        copyList.forEach((item, index) => {\r\n            item.itemOrder = index + 1;\r\n        });\r\n        uList.items = copyList;\r\n        updateList(uList);\r\n    };\r\n\r\n\r\n    const removeItem = async (item) => {\r\n        const updated = await api.sendDelete(\"list/item\", item, loginDetails)\r\n\r\n        updateList(updated);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                <DragDropContext onDragEnd={handleDragEnd}>\r\n                    <Droppable droppableId=\"items\">\r\n                        {(droppableProvider) => (\r\n                            <Box\r\n                                ref={droppableProvider.innerRef}\r\n                                {...droppableProvider.droppableProps}\r\n                            >\r\n                                {uList.items.map((item, index) => (\r\n                                    <Draggable\r\n                                        index={index}\r\n                                        key={item.id}\r\n                                        draggableId={item.id + \"\"}\r\n                                    >\r\n                                        {(draggableProvider) => (\r\n                                            <ListItem\r\n                                                ref={draggableProvider.innerRef}\r\n                                                {...draggableProvider.draggableProps}\r\n                                                {...draggableProvider.dragHandleProps}\r\n                                                sx={{\r\n                                                    cursor: 'pointer',\r\n                                                    border: '1px solid ',\r\n                                                    borderColor: 'primary.darker',\r\n                                                    marginTop: '5px',\r\n                                                    borderRadius: '5px',\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    justifyContent: 'space-between',\r\n\r\n                                                }}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Box>\r\n                                                        <DragIndicator/>\r\n                                                    </Box>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText primary={item.item}\r\n                                                              primaryTypographyProps={{fontSize: '18px'}}/>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\"\r\n                                                            onClick={() => removeItem(item)}>\r\n                                                    <ClearIcon/>\r\n                                                </IconButton>\r\n                                            </ListItem>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {droppableProvider.placeholder}\r\n                            </Box>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditItems;\r\n","import React, {useState} from 'react';\r\nimport {Box, Button, TextField} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\n\r\nconst AddItem = ({uList, updateList}) => {\r\n    const [newItem, setItem] = useState('');\r\n\r\n    const addToList = () => {\r\n        if (newItem.trim() === '') return;\r\n        const newItemObj = {\r\n            listId: uList.listInfo.id,\r\n            item: newItem\r\n        };\r\n\r\n        const updatedList = {\r\n            ...uList,\r\n            items: [...uList.items, newItemObj]\r\n        };\r\n\r\n        updateList(updatedList);\r\n\r\n        setItem('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Box sx={{display: 'flex', alignItems: 'center', mt: 2}}>\r\n                <TextField\r\n                    inputProps={{maxLength: 200}}\r\n                    id=\"new-item\"\r\n                    label=\"New Item\"\r\n                    variant=\"outlined\"\r\n                    value={newItem}\r\n                    onChange={(e) => setItem(e.target.value)}\r\n                    fullWidth\r\n                    sx={{height: '56px',}}\r\n                    InputProps={{\r\n                        sx: {\r\n                            borderTopRightRadius: 0,\r\n                            borderBottomRightRadius: 0,\r\n                            '& .MuiOutlinedInput-notchedOutline': {\r\n                                borderTopRightRadius: 0,\r\n                                borderBottomRightRadius: 0,\r\n                            },\r\n                            height: '56px',\r\n\r\n                            borderColor: 'primary.darker',\r\n                        }\r\n                    }}\r\n                />\r\n                <Button\r\n                    onClick={addToList}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                        borderTopLeftRadius: 0,\r\n                        borderBottomLeftRadius: 0,\r\n                        height: '56px',\r\n                        minWidth: '56px',\r\n                    }}\r\n                >\r\n                    <AddIcon/>\r\n                </Button>\r\n            </Box>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddItem;\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Box,\r\n    IconButton,\r\n    Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Dialog,\r\n    AccordionSummary,\r\n    Accordion,\r\n    AccordionDetails\r\n} from '@mui/material';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport {ApiCaller} from \"../ApiCaller\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport ViewOnlyUsers from \"./ViewOnlyUsers\";\r\n\r\nconst apiCaller = new ApiCaller()\r\n\r\n\r\nconst ViewerOptions = ({uList}) => {\r\n    const {loginDetails, user} = useContext(AuthContext);\r\n    const [dialog, setDialog] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    function openDialog() {\r\n        setDialog(true);\r\n    }\r\n\r\n    function closeDialog() {\r\n        setDialog(false);\r\n    }\r\n\r\n    async function leaveList() {\r\n        await apiCaller.sendPost(\"list/removeUser\", {user: user.username, listId: uList.listInfo.id}, loginDetails)\r\n        setDialog(false)\r\n        navigate(`/web/overview`);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <IconButton variant=\"outlined\" onClick={openDialog} sx={{color: 'secondary.main'}}>\r\n                <InfoIcon />\r\n            </IconButton>\r\n\r\n            <Dialog\r\n                fullScreen\r\n                open={dialog}\r\n                onClose={closeDialog}\r\n            >\r\n                <DialogTitle><Box sx={{paddingTop: 2}}>\r\n                    <Typography fontSize={\"xx-large\"} sx={{fontFamily: 'Garamond', textAlign: 'center'}}>\r\n                        List Info\r\n                    </Typography>\r\n                </Box></DialogTitle>\r\n                <DialogContent>\r\n                    <Box maxWidth={400} sx={{\r\n                        mx: 'auto',\r\n                        border: '1px solid ',\r\n                        borderColor: 'primary.darker',\r\n                        marginTop: '5px',\r\n                        borderRadius: '5px',\r\n                    }} variant=\"contained\">\r\n\r\n                        <ViewOnlyUsers uList={uList}></ViewOnlyUsers>\r\n\r\n                        <Accordion>\r\n                            <AccordionSummary id=\"panel-header\" aria-controls=\"panel-content\"\r\n                                              sx={{backgroundColor: \"primary.main\"}}>\r\n                                <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n                                    <Typography p={1} fontSize={\"large\"}>Leave</Typography>\r\n                                </Box>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails sx={{justifyContent: 'center'}}>\r\n                                <Typography textAlign={'center'} p={1}>Warning: <br/>If you want to come back, the owner\r\n                                    will have to add you again.</Typography>\r\n                                <Button onClick={leaveList} variant={\"contained\"} sx={{padding: 2}}\r\n                                        color={\"error\"} fullWidth>Leave list</Button>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                        \r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions sx={{justifyContent: 'center'}}>\r\n                    <Button onClick={closeDialog} variant=\"contained\">\r\n                        Close\r\n                    </Button>\r\n\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewerOptions;\r\n","import React, {useContext, useState} from 'react';\r\nimport {\r\n    Box, IconButton\r\n} from '@mui/material';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\r\nimport EditDialog from \"./EditDialog\";\r\nimport CheckListDisplay from \"./CheckListDisplay\";\r\nimport BasicList from \"./BasicList\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport {AuthContext} from \"../AuthContext\";\r\nimport EditItems from \"./EditItems\";\r\nimport AddItem from \"./AddItem\";\r\nimport ViewerOptions from \"./ViewerOptions\";\r\nimport PageHeader from \"./PageHeader\";\r\n\r\n\r\nconst ListDisplay = ({uList, updateList}) => {\r\n    const {user} = useContext(AuthContext);\r\n    const [locked, setLocked] = useState(true);\r\n    const [editRights, setEditRights] = useState(() => {\r\n        return user.username === uList.owner || uList.editors.includes(user.username);\r\n    });\r\n\r\n    const toggleLocked = () => {\r\n        setLocked(!locked);\r\n    };\r\n\r\n    function getListType(type) {\r\n        switch (type.listInfo.type) {\r\n            case 'CHECK':\r\n                return <CheckListDisplay uList={uList} updateList={updateList}/>;\r\n            default:\r\n                return <BasicList uList={uList}/>;\r\n        }\r\n    }\r\n\r\n    const users = () => {\r\n        if (uList.owner === user.username && uList.editors.length === 0 && uList.viewers.length === 0) {\r\n            return <br/>\r\n        } else {\r\n            const editorsAndViewers = [...uList.editors, ...uList.viewers].join(\", \");\r\n            const allUsers = uList.owner + \", \" + editorsAndViewers\r\n\r\n            return (\r\n                <>\r\n                    <GroupIcon sx={{verticalAlign: 'middle', mr: 1}}/>\r\n                    {allUsers}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box maxWidth={750} sx={{mx: 'auto'}} variant=\"contained\">\r\n\r\n\r\n                <Box>\r\n                    <PageHeader title={uList.listInfo.listName}></PageHeader>\r\n                    <Box sx={{\r\n                        display: 'grid', border: '1px solid ',\r\n                        borderColor: 'primary.darker', borderRadius: 2, m: 2\r\n                    }}>\r\n                        <Box sx={{marginBottom: 2, gridRow: '1', gridColumn: \"1 / 2\", m: 1}}>\r\n                            <Typography fontSize={\"large\"} sx={{fontFamily: 'Garamond', textAlign: 'left'}}>\r\n                                {uList.listInfo.listDesc}\r\n                                <br/>\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box sx={{gridRow: '1', gridColumn: '3'}}>\r\n\r\n\r\n                            {editRights ? (\r\n                                <>\r\n                                    <EditDialog uList={uList} updateList={updateList}></EditDialog>\r\n                                    <IconButton variant=\"outlined\" onClick={toggleLocked}>\r\n                                        {locked ? <LockIcon sx={{color: 'secondary.main'}}/> :\r\n                                            <LockOpenIcon sx={{color: 'secondary.main'}}/>}\r\n                                    </IconButton>\r\n                                </>\r\n                            ) : (\r\n                                <ViewerOptions uList={uList}></ViewerOptions>)}\r\n\r\n                        </Box>\r\n                        <Typography sx={{gridRow: '2', gridColumn: '1 / 3', textAlign: 'left', p: 1}}>\r\n                            {users()}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                {locked ? (\r\n                    <Box>{getListType(uList)}</Box>\r\n                ) : (\r\n                    <EditItems uList={uList} updateList={updateList}/>\r\n                )}\r\n\r\n                {editRights && (<AddItem uList={uList} updateList={updateList}></AddItem>)}\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListDisplay;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Box, CircularProgress, Typography } from '@mui/material';\r\nimport { AuthContext } from \"../AuthContext\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport { ApiCaller } from \"../ApiCaller\";\r\nimport ListDisplay from \"../components/ListDisplay\";\r\nimport { BASE_URL_SOCKET } from \"../constants\";\r\n\r\nconst apiCaller = new ApiCaller();\r\n\r\nconst ViewList = () => {\r\n    const { id } = useParams();\r\n    const { loginDetails } = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [uList, setList] = useState(null);\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [fetchError, setFetchError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchList = async () => {\r\n            try {\r\n                const data = await apiCaller.sendGet(`list/${id}`, loginDetails);\r\n                setList(data);\r\n            } catch (error) {\r\n                setFetchError(true);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchList();\r\n\r\n        const socket = new SockJS(BASE_URL_SOCKET);\r\n        const client = new Client({\r\n            webSocketFactory: () => socket,\r\n            onConnect: () => {\r\n                console.log('Connected to WebSocket');\r\n                client.subscribe(`/topic/list/${id}`, (message) => {\r\n                    const updatedList = JSON.parse(message.body);\r\n                    setList(updatedList);\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error('Broker reported error: ' + frame.headers['message']);\r\n                console.error('Additional details: ' + frame.body);\r\n            }\r\n        });\r\n\r\n        client.activate();\r\n        setStompClient(client);\r\n\r\n        return () => {\r\n            if (client && client.connected) {\r\n                client.deactivate();\r\n            }\r\n        };\r\n    }, [id, loginDetails]);\r\n\r\n    const updateList = (newList) => {\r\n        setList(newList);\r\n\r\n        if (stompClient && stompClient.connected) {\r\n            stompClient.publish({\r\n                destination: `/app/list/${id}`,\r\n                body: JSON.stringify(newList)\r\n            });\r\n            console.log(\"Sent update to WebSocket\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <Box>\r\n                    <CircularProgress />\r\n                    <Typography>Loading List</Typography>\r\n                </Box>\r\n            ) : (\r\n                <>\r\n                    {fetchError ? (\r\n                        <Typography>Unable to load list.</Typography>\r\n                    ) : (\r\n                        <ListDisplay uList={uList} updateList={updateList} />\r\n                    )}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewList;\r\n"],"names":["ApiCaller","constructor","baseUrl","BASE_URL","sendPost","path","data","loginDetails","response","fetch","this","method","headers","body","JSON","stringify","ok","console","log","json","errorResponse","Error","sendPostNoLogin","sendGet","sendDelete","_ref","title","_jsx","_Fragment","children","_jsxs","Box","sx","paddingTop","Typography","fontSize","fontFamily","color","apiCaller","Spinner","list","updateCopy","useContext","AuthContext","newUser","setNewUser","useState","newUserRole","setNewUserRole","userCheckLoading","setUserLoading","errorMessage","setErrorMessage","editors","viewers","handleRoleChange","user","newRole","newList","filter","u","includes","editor","viewer","handleRemoveUser","Accordion","AccordionSummary","id","backgroundColor","width","display","justifyContent","p","AccordionDetails","length","map","index","alignItems","marginBottom","flexGrow","marginLeft","FormControl","marginRight","Select","value","onChange","e","target","MenuItem","IconButton","onClick","DeleteIcon","flexDirection","maxWidth","TextField","inputProps","maxLength","label","variant","fullWidth","defaultValue","event","name","Button","async","username","height","uList","minWidth","owner","listInfo","listName","updateTitle","listDesc","updateDesc","type","HandleUsers","ViewOnlyUsers","updateList","dialog","setDialog","listCopy","setCopy","isOwner","setIsOwner","navigate","useNavigate","closeDialog","ownsList","useEffect","EditIcon","Dialog","fullScreen","open","onClose","DialogTitle","textAlign","PageHeader","DialogContent","mx","cursor","border","borderColor","marginTop","borderRadius","EditListDetails","newCopy","padding","listId","DialogActions","deletedEditors","deletedViewers","concat","forEach","editRights","setEditRights","List","items","item","ListItem","itemId","updatedItems","itemStatus","handleItemClick","ListItemAvatar","status","CheckBoxIcon","CheckBoxOutlineBlankIcon","ListItemText","primary","primaryTypographyProps","edge","Icon","api","DragDropContext","onDragEnd","result","destination","startIndex","source","endIndex","copyList","reorderItem","splice","itemOrder","Droppable","droppableId","droppableProvider","ref","innerRef","droppableProps","Draggable","draggableId","draggableProvider","draggableProps","dragHandleProps","DragIndicator","updated","removeItem","ClearIcon","placeholder","newItem","setItem","mt","InputProps","borderTopRightRadius","borderBottomRightRadius","addToList","trim","newItemObj","updatedList","borderTopLeftRadius","borderBottomLeftRadius","AddIcon","InfoIcon","locked","setLocked","m","gridRow","gridColumn","EditDialog","toggleLocked","LockIcon","LockOpenIcon","ViewerOptions","users","editorsAndViewers","join","allUsers","GroupIcon","verticalAlign","mr","CheckListDisplay","BasicList","EditItems","AddItem","ViewList","useParams","loading","setLoading","setList","stompClient","setStompClient","fetchError","setFetchError","error","fetchList","socket","SockJS","BASE_URL_SOCKET","client","Client","webSocketFactory","onConnect","subscribe","message","parse","onStompError","frame","activate","connected","deactivate","CircularProgress","ListDisplay","publish"],"sourceRoot":""}